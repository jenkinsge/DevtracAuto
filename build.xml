<?xml version="1.0" encoding="UTF-8"?>
<project name="devtrac" default="build">

  <property name="drupal.profile" value="devtrac"/>

  <property name="builddir" value="${basedir}/build"/>
  <property name="buildrep" value="${basedir}/report"/>
  <property name="selenium" value="${builddir}/selenium-server-standalone.jar"/>

  <property file="build.properties"/>

  <property name="account.name"     value="admin"/>
  <property name="account.pass"     value="admin"/>
  <property name="account.mail"     value="test@example.com"/>
  <property name="base.url"         value="http://localhost"/>
  <property name="behat.params"     value='{"extensions": {"Behat/MinkExtension/Extension": {"base_url": "http://localhost"}}}'/>
  <property name="composer"         value="${builddir}/composer.phar"/>
  <property name="db.url"           value="mysql://username:password@host/db"/>
  <property name="docroot"          value="${basedir}/docroot"/>
  <property name="drush.makefile"   value="build-${drupal.profile}.make"/>
  <property name="drush.args"       value=""/>
  <property name="php"              value="php"/>
  <property name="rsync"            value="rsync"/>
  <property name="selenium.version" value="2.42.2"/>
  <property name="selenium.port"    value="4444"/>
  <property name="site.mail"        value="test@example.com"/>
  <property name="site.name"        value="devtrac"/>
  <property name="sites.subdir"     value="default"/>

  <target name="build" depends="install" description="Run drush make and drush site-install"/>
  <target name="run-tests" depends="behat" description="Run behavior tests"/>

  <target name="clean" description="Clean build artifacts">
    <delete dir="${builddir}"/>
  </target>

  <target name="clean-docroot">
    <chmod dir="${docroot}/sites/${sites.subdir}" perm="755"/>
    <delete dir="${docroot}"/>
  </target>

  <target name="clean-vendor">
    <delete dir="${basedir}/composer.lock"/>
    <delete dir="${docroot}/vendor"/>
  </target>

  <target name="clean-src" depends="clean-docroot,clean-vendor" description="Clean source code"/>

  <target name="clean-all" depends="clean,clean-src" description="Clean build artifacts and source code"/>

  <target name="prepare">
    <mkdir dir="${builddir}" />
    <mkdir dir="${builddir}/logs" />
    <mkdir dir="${buildrep}" />
    
  </target>
  <!-- <copy file="report.html" todir="${basedir}/test/"/> -->

  <target name="composer-check">
    <available file="${composer}" property="composer.present"/>
  </target>

  <target name="composer-download" depends="prepare,composer-check" unless="composer.present">
    <property name="composer.noselfupdate" value="true"/>
    <get src="https://getcomposer.org/composer.phar" dest="${composer}"/>
  </target>

  <target name="composer-selfupdate" depends="composer-download" unless="composer.noselfupdate">
    <exec executable="${php}" taskname="composer">
      <arg value="${composer}"/>
      <arg value="self-update"/>
      <arg value="--quiet"/>
    </exec>
  </target>

  <target name="composer" depends="composer-selfupdate" unless="composer.noupdate" description="Run composer update">
    <exec executable="${php}" taskname="composer">
      <arg value="${composer}"/>
      <arg value="update"/>
    </exec>
  </target>

  <target name="drush-check">
    <condition property="drush.present">
      <or>
        <available file="${builddir}/vendor/bin/drush"/>
        <isset property="${drush}"/>
      </or>
    </condition>
    <condition property="drush" value="${builddir}/vendor/bin/drush">
      <not>
        <isset property="${drush}"/>
      </not>
    </condition>
  </target>

  <target name="drush-download" depends="prepare,composer-selfupdate,drush-check" unless="drush.present">
    <exec executable="${php}" taskname="composer">
      <arg value="${composer}"/>
      <arg value="--working-dir=${builddir}"/>
      <arg value="require"/>
      <arg value="drush/drush:~6.0"/>
    </exec>
  </target>
  
  <target name="psr-download" depends="prepare,composer-selfupdate,drush-check" unless="drush.present">
    <exec executable="${php}" taskname="composer">
      <arg value="${composer}"/>
      <arg value="--working-dir=${builddir}"/>
      <arg value="require"/>
      <arg value="psr/log: 1.0.*@dev"/>
    </exec>
  </target>
  <target name="drush-make" depends="drush-download" unless="drush.nomake" description="Run drush make">
    <delete dir="${builddir}/docroot"/>
    <!-- Run drush make into ./build/drupal -->
    <exec executable="${drush}" taskname="drush">
      <env key="DRUSH_PHP" value="${php}"/>
      <arg value="make"/>
     
      <arg value="${basedir}/${drush.makefile}"/>
      <arg value="${builddir}/docroot"/>
    </exec>
    <!-- Rsync the build into ./docroot -->
    <exec executable="${rsync}" taskname="rsync">
      <arg value="-aqc"/>
      <arg value="--delete"/>
      <arg value="--exclude=sites/*/settings*.php"/>
      <arg value="--exclude=sites/*/files"/>
      <arg value="${builddir}/docroot/"/>
      <arg value="${docroot}"/>
    </exec>
    
  <first id="first">
    <fileset dir="/home/travis/build/jenkinsge/devtrac/build/" includes="**/devtrac.profile" />
  </first>
  <echo message="${toString:first}" />
    
  <!-- <copy overwrite="true" file="/home/travis/build/TddDoctor/devtrac/devtrac.profile" todir="/home/travis/build/TddDoctor/devtrac/build/docroot/profiles/devtrac/" />
     replacing the devtrac.profile file for default country -->
     
     
  </target>
  <target name="install" depends="drush-make" unless="drush.noinstall" description="Run drush site-install">
    <exec executable="${drush}" dir="${builddir}/docroot" taskname="drush">
      <env key="DRUSH_PHP" value="${php}"/>
      <arg value="site-install"/>
      <arg value="-y"/>
      <arg value="-v"/>
      <arg value="${drupal.profile}"/>
      <arg value="--db-url=${db.url}"/>
      <arg value="--site-name=${site.name}"/>
      <arg value="--site-mail=${site.mail}"/>
      <arg value="--account-pass=${account.pass}"/>
      <arg value="--account-mail=${account.mail}"/>
      <arg value="--account-name=${account.name}"/>
      <arg value="--sites-subdir=${sites.subdir}"/>
      <arg value="${drupal.profile}"/>
      <arg value="${drupal.args}"/>
    </exec>
  </target>

  <target name="uninstall" depends="drush-check" description="Run drush sql-drop">
    <exec executable="${drush}" dir="${builddir}/docroot" taskname="drush">
      <env key="DRUSH_PHP" value="${php}"/>
      <arg value="sql-drop"/>
      <arg value="-y"/>
      
      <arg value="--db-url=${db.url}"/>
    </exec>
  </target>

  <target name="behat-check">
    <condition property="behat.present">
      <or>
        <available file="${docroot}/vendor/bin/behat"/>
        <isset property="${behat}"/>
      </or>
    </condition>
    <condition property="behat" value="${builddir}/vendor/bin/behat">
      <not>
        <isset property="${behat}"/>
      </not>
    </condition>
  </target>

  <target name="behat-download" depends="prepare,composer-selfupdate,behat-check" unless="behat.present">
    <exec executable="${php}" taskname="composer">
      <arg value="${composer}"/>
      <arg value="--working-dir=${builddir}"/>
      <arg value="require"/>
      <arg value="drupal/drupal-extension:1.0.0"/>
      <arg value="symfony/css-selector: 2.4.2"/>
      <arg value="psr/log:1.0.*@dev"/>
    </exec>
  </target>

  <target name="behat" depends="build,behat-download">
    <antcall target="selenium-start" />
    <exec executable="${behat}" taskname="behat">
    </exec>
    <antcall target="selenium-stop" />
  </target>

  <target name="selenium-check" depends="prepare">
    <available file="${selenium}" property="selenium.present"/>
  </target>

  <target name="selenium-download" unless="selenium.present">
    <get src="https://selenium-release.storage.googleapis.com/2.42/selenium-server-standalone-${selenium.version}.jar" dest="${selenium}"/>
  </target>

  <target name="selenium-start" depends="selenium-download">
    <echo taskname="selenium" message="Starting: Selenium server" />
    <java jar="${selenium}" fork="true" spawn="true">
      <arg line="-port ${selenium.port}"/>
      <arg line="-log ${builddir}/logs/selenium.log"/>
    </java>
    <waitfor maxwait="30" maxwaitunit="second">
      <and>
        <socket server="localhost" port="${selenium.port}"/>
        <http url="http://localhost:${selenium.port}/selenium-server/core/index.html" errorsBeginAt="404"/>
      </and>
    </waitfor>
  </target>

  <target name="selenium-stop">
    <get taskname="selenium"
         src="http://localhost:${selenium.port}/selenium-server/driver/?cmd=shutDownSeleniumServer"
         dest="${builddir}/logs/shutdown.log"
         ignoreerrors="true"
         />
  </target>

</project>
