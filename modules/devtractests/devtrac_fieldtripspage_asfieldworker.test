<?php

/**
 * @file
 * Visit the Field Trips page as a Field worker and check that all is as
 * should be.
 */


// Make sure simpletest_clone is available.
module_load_include('test', 'simpletest_clone');

/**
 * Checks that when the Field Trips page is viewed by a field worker, the
 * page and its content is all present and working as it should.
 */
class VisitFieldTripsAsFieldWorkerTestCase extends SimpleTestCloneTestCase {
  protected $profile = 'devtrac';
  protected $user;
  protected $administrator;

  /**
   * Create an admin user.
   */
  public function drupalCreateAdminUser(array $permissions = array()) {
    $roles = user_roles();
    $index = array_search('administrator', $roles);
    $user = $this->drupalCreateUser($permissions);
    $user->roles[$index] = 'administrator';
    return user_save($user);
  }

  /**
   * Click link using it's xpath.
   */
  public function clickLinkUsingXpath($label, $index, $linkxpath) {
    $url_before = $this->getUrl();
    $urls = $this->xpath($linkxpath);
    if (isset($urls[$index])) {
      $url_target = $this->getAbsoluteUrl($urls[$index]['href']);
      $this->pass(t('Clicked link %label (@url_target) from @url_before',
        array(
          '%label' => $label,
          '@url_target' => $url_target,
          '@url_before' => $url_before)),
        t('Devtrac'));
      $this->drupalGet($url_target);
    }
    else {
      $this->fail(t('%label Link does not exist on @url_before', array('%label' => $label, '@url_before' => $url_before)), t('Devtrac'));
    }
  }

  /**
   * Creates a user with the given role.
   */
  public function drupalCreateUserWithRole($role) {
    $roles = user_roles();
    $index = array_search($role, $roles);
    $permissions = user_role_permissions(array(array_search($role, $roles) => $role));
    $user = $this->drupalCreateUser(array_keys($permissions[$index]));
    $user->roles[$index] = $role;
    return user_save($user);
  }

  /**
   * Asserts that the given pattern is not in the body .
   */
  public function assertNoPatternInBody($pattern, $message, $group) {
    $body = strstr($this->drupalGetContent(), '<body');
    // $this->verbose($body);
    $this->assert(!preg_match($pattern, $body), $message, $group);
  }

  /**
   * Asserts that the facets in the right sidebar are in the correct order
   */
  public function assertFacetOrder($order, $message, $group) {
    $sidebar = strstr($this->drupalGetContent(), '<div class="region-inner region-sidebar-first-inner">');
    // $this->verbose($sidebar);
    $matches = array();
    preg_match_all('/<h2[ a-zA-z="->]*/', $sidebar, $result);
    $result = reset($result);
    // $this->verbose(var_export($result, TRUE));
    foreach($result as $match) {
      $match = strstr($match, '</h2>', true);
      $match = strstr($match, '>');
      $match = substr($match, 1);
      array_push($matches, $match);
    }
    $this->verbose(var_export($matches, TRUE));
    $this->assert($matches === $order, $message, $group);
  }

  /**
   * The getInfo function.
   */
  public static function getInfo() {
    return array(
      'name' => 'Field Trips page as a Field Worker',
      'description' => 'Visit Field Trips page as a Field Worker and check that all is as should be.',
      'group' => 'Devtrac2',
    );
  }

  /**
   * The setUp function.
   */
  public function setUp() {
    $this->public_files_directory = variable_get('file_public_path');
    parent::setUp(array('devtractests'));

    $administrator = $this->drupalCreateAdminUser();
    $this->drupalLogin($administrator);

    // Enabling demo data.
    $this->drupalGet('admin/apps/devtrac/devtrac_to_devtrac_importer/details');
    $this->clickLink('Enable App', 0);
    $this->assertText('Enabled Devtrac to Devtrac Importers app', t('Enabled Devtrac to Devtrac Importers app'), t('Devtrac'));
    $this->clickLink('Configure', 0);
    $this->drupalPost(NULL, NULL, t('Enable Demo Content'));
    $this->assertText('All Data has been imported. It will take a little while before the data will appear on the overview pages.', t('All Data has been imported. It will take a little while before the data will appear on the overview pages.'), t('Devtrac'));

    // Adding Admin Unit tags.
    $this->drupalGet('admin/structure/taxonomy/district_category/add');
    $tag1['name'] = 'Tag 1';
    $this->drupalPost(NULL, $tag1, t('Save'));
    $tag2['name'] = 'Tag 2';
    $this->drupalPost(NULL, $tag2, t('Save'));
    $this->drupalGet('admin/structure/taxonomy/district_category');

    // Running cron twice so mapit can lookup the admin units.
    $this->cronRun();
    $this->drupalGet('');
    $this->cronRun();

    $this->drupalGet('admin/structure/taxonomy/vocabulary_6');
    $this->clickLink('edit', 9);
    $tag['field_district_category[und]'] = 'Tag 1';
    $this->drupalPost(NULL, $tag, t('Save'));
    $this->clickLink('Amudat');
    $this->assertRaw('<div class="field-label">Tags:&nbsp;</div><div class="field-items"><div class="field-item even">Tag 1</div></div></div></div>', t('Amudat district tagged correctly.'), t('Devtrac'));

    $this->drupalGet('admin/config/search/search_api/index/devtrac_solr_site_visits_index');
    $this->drupalPost(NULL, NULL, t('Queue all items for reindexing'));
    $this->drupalPost(NULL, NULL, t('Confirm'));
    $this->drupalPost(NULL, NULL, t('Clear all indexed data'));
    $this->drupalPost(NULL, NULL, t('Confirm'));
    $this->drupalPost(NULL, NULL, t('Index now'));

    // $this->drupalGet('district/uganda/amudat');
    $this->drupalLogout();
    // Create a field worker.
    $user = $this->drupalCreateUserWithRole('field worker');
    $this->drupalLogin($user);
    $this->clickLink(t('Edit My Profile'), 0);
    // Assign a manager.
    $admin_account = user_load($administrator->uid);
    $manager['taxonomy_vocabulary_5[und]'] = '11';
    $manager['field_user_superior[und][0][target_id]'] = $admin_account->name . ' (' . $administrator->uid . ')';
    $manager['taxonomy_vocabulary_4[und]'] = '16';
    $manager['field_user_firstname[und][0][value]'] = 'Test';
    $manager['field_user_surname[und][0][value]'] = 'Fieldworker';
    $manager['field_user_aboutme[und][0][value]'] = '...';
    $this->drupalPost(NULL, $manager, t('Save'));

    // Create a Site Report for edit button test.
    $this->clickLink('Add Field Trip', 0);
    $fieldtrip['title'] = 'Test Title';
    $fieldtrip['field_fieldtriptags[und]'] = 'Test Tag';
    $fieldtrip['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_fc_purpose_purps][und]'] = '10';
    $fieldtrip['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_percent][und][0][value]'] = 100;
    $this->drupalPost(NULL, $fieldtrip, t('Save'));
    $this->clickLink('Add Site Report');
    $sitereporttype['district'] = '3';
    $sitereporttype['reporttype'] = '2';
    // $sitereporttype["reporttype['Site Visit']"] = TRUE;
    $this->drupalPost(NULL, $sitereporttype, t('Submit'));
    $location['title'] = 'test location';
    $location['taxonomy_vocabulary_1[und][0][tid]'] = 286;
    $location['field_place_lat_long[und][0][geom]'] = 'POINT(32.70449822231746 0.5564815500152875)';
    $this->drupalPost(NULL, $location, t('Save'));
    
    $this->clickLink('Site Reports', 1);
    $this->clickLink('Site Visit at test location', 0);
    $this->clickLink('Add Actionitem', 0);

    $actionitem['title'] = 'Test Action Item';
    $actionitem['taxonomy_vocabulary_8[und][]'] = '158';
    $actionitem['field_actionitem_followuptask[und][0][value]'] = 'Testing presence of Edit button.';
    $this->drupalPost(NULL, $actionitem, t('Save'));
    $this->clickLink('Field trips', 0);
  }

  /**
   * Assess 'Field Trips' page as a field worker.
   */
  public function testFieldtripsPageAccessFieldWorker() {
    $this->drupalGet('');
    $this->clickLink('Field trips', 0);
    $this->assertNoText(t('Access denied'), t('Field Worker is permitted to visit the Field Trips page.'), t('Devtrac'));
  }

  /**
   * Check that all generic content is present.
   */
  public function testPresenceOfGenericContentFieldWorker() {

    // Check for Error Messages.
    $this->assertNoRaw('<h2 class="messages-label error">Error</h2>', t('There are no errors on this page'), t('Devtrac'));

    // Check for Built by Mountbatten footer text.
    $this->assertRaw('<p><span id="project-info-footer"><a href="http://www.devtrac.org" title="Devtrac">www.devtrac.org</a> | Built by  <a href="http://www.mountbatten.net/">Mountbatten Ltd</a> | Originally developed for <a href="http://www.unicef.org/uganda">Unicef Uganda</a> Â© 2015<br /></span></p>',
        t('Correct Project Information is displayed on the page'),
        t('Devtrac'));

    // Check for link to devtrac.
    $this->assertLinkByHref('http://www.devtrac.org', 0, t('There is a link to devtrac.org on the page.'), t('Devtrac'));

    // LIST VIEW MODE.
    // Check for generic Main Menu Links.
    $this->assertLinkByHref('/sitereports', 0, t('Site Reports link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/statistics', 0, t('Statistics link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/adminunits', 0, t('Admin Units link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/locations', 0, t('Locations link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/actionitems', 0, t('Action Items link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips', 0, t('Field trips link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/images', 0, t('Images link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/users', 0, t('Users link is present on the page.'), t('Devtrac'));
    $this->assertLink('Log out', 0, t('LOG OUT link is present on the page.'), t('Devtrac'));

    // Check for view mode button links.
    $this->assertLinkByHref('/fieldtrips?display=default', 0, t('Default display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips?display=graphs', 0, t('Graphs display link is present on the page.'), t('Devtrac'));

    // Check that the my-profile menu is present.
    $this->assertLink('Welcome, Test', 0, t('My profile menu is present on the page.'), t('Devtrac'));
    $this->assertLink('Add Field Trip', 0, t('Add Field Trip link is present on the page.'), t('Devtrac'));
    $this->assertLink('Edit My Profile', 0, t('Edit My Profile link is present on the page.'), t('Devtrac'));

    // Check for Export links.
    $this->assertLink('Export', 0, t('Export link is present on the page.'), t('Devtrac'));
    $this->assertNoLinkByHref('/fieldtrips/analyse/csvadmin', t('Export to CSV (administrator version) link is not present on the page.'), t('Devtrac'));
    $this->assertLink('Export to CSV', 0, t('Export to CSV link is present on the page.'), t('Devtrac'));
    $this->assertLink('Export to KML', 0, t('Export to KML link is present on the page.'), t('Devtrac'));
    $this->assertLink('Subscribe to RSS Feed', 0, t('Subscribe to RSS Feed link is present on the page.'), t('Devtrac'));

    // Check for Facet default state (expanded or collapsed).
    // Check.
    // 2 is collapsible, default open.
    // 3 is collapisble, default closed.

    // Admin Unit block id block-facetapi-n49vhffodlb6pbfilkpnopsnjcgu17ii.
    $this->assertRaw('"block-facetapi-n49vhffodlb6pbfilkpnopsnjcgu17ii":2', t('Admin Unit block is expanded by default.'), t('Devtrac'));

    // Date block id block-facetapi-jqiaevtcptm45t6mjy6iyrnrctomlddl.
    $this->assertRaw('"block-facetapi-jqiaevtcptm45t6mjy6iyrnrctomlddl":3', t('Date block is collapsed by default.'), t('Devtrac'));

    // Status block id block-facetapi-zrar0vddywhq9nwqylbat4xzhcdxcz6x.
    $this->assertRaw('"block-facetapi-zrar0vddywhq9nwqylbat4xzhcdxcz6x":3', t('Report block is collapsed by default.'), t('Devtrac'));

    // Admin Unit Tags block id block-facetapi-b62gimkp95sx9aofwy7kvpzd1yvsatgd.
    $this->assertRaw('"block-facetapi-b62gimkp95sx9aofwy7kvpzd1yvsatgd":3', t('Admin Unit Tags block is collapsed by default.'), t('Devtrac'));

    // Tags block id block-facetapi-56c5qjfqxuogmgg1mnjmochfouokxduj.
    $this->assertRaw('"block-facetapi-56c5qjfqxuogmgg1mnjmochfouokxduj":3', t('Tags block is collapsed by default.'), t('Devtrac'));

    // Purpose block id block-facetapi-jzaixysynllh9txga8mdmsyr86v1sxlw.
    $this->assertRaw('"block-facetapi-jzaixysynllh9txga8mdmsyr86v1sxlw":3', t('Purpose block is collapsed by default.'), t('Devtrac'));

    // User block id block-facetapi-uzhphpemgadagavmb0mebpqcl9o6wagc.
    $this->assertRaw('"block-facetapi-uzhphpemgadagavmb0mebpqcl9o6wagc":3', t('User block is collapsed by default.'), t('Devtrac'));

    // Manager block id block-facetapi-lcabek6godjxj8t0h2tn8zcctoadcgin.
    $this->assertRaw('"block-facetapi-lcabek6godjxj8t0h2tn8zcctoadcgin":3', t('Manager block is collapsed by default.'), t('Devtrac'));

    // Information pane block id block-pane-field-trips-info.
    $this->assertRaw('"block-pane-field-trips-info":3', t('Information pane block is collapsed by default.'), t('Devtrac'));

    // Check for Field Trip counter.
    $this->assertRaw('<div class="current-search-item current-search-item-text current-search-item-results"><h3 class="">5 Field Trips</h3></div>', t('Current search counter is present on the page'), t('Devtrac'));

    // Check for no : in Date.
    // High level.
    $this->assertNoPatternInBody('/([01]?[0-9]|[2][0-3])\:([0-5][0-9]|[6][0])/', t('No links with time found on a high level on the page.'), t('Devtrac'));
    // Low Level.
    $this->clickLinkUsingXpath('March 2014 ', 0, '//*[@id="facetapi-link--5"]');
    $this->clickLinkUsingXpath('March 27, 2014 ', 0, '//*[@id="facetapi-link--3"]');
    $this->assertNoPatternInBody('/([01]?[0-9]|[2][0-3])\:([0-5][0-9]|[6][0])/', t('No links with time found on a high level on the page.'), t('Devtrac'));

    $this->drupalGet('');
    $this->clickLink('Field trips');

    // Check for order of Facets.
    $order = array('Admin Unit', 'Status', 'Admin Unit Tags', 'Date', 'Purposes', 'Tags', 'Author', 'Manager');
    $this->assertFacetOrder($order, t('Facets are in the correct order.'), t('Devtrac'));

    // Search Api Elements.
    // Check for Facets.

    // Admin Unit.
    $this->assertRaw('<h2 class="block-title">Admin Unit</h2>', t('Admin Unit Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-6" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-taxonomy-vocabulary-6">', t('Admin Unit search list is present on the page'), t('Devtrac'));

    // Date.
    $this->assertRaw('<h2 class="block-title">Date</h2>', t('Date Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-field-fieldtrip-start-end-datevalue" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-field-fieldtrip-start-end-datevalue">', t('Due Date search list is present on the page'), t('Devtrac'));

    // Status.
    $this->assertRaw('<h2 class="block-title">Status</h2>', t('Status Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-field-fieldtrip-status" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-field-fieldtrip-status">', t('Status search list is present on the page'), t('Devtrac'));

    // Admin Unit Tags.
    $this->assertRaw('<h2 class="block-title">Admin Unit Tags</h2>', t('Admin Unit Tags Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-6field-district-category" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-taxonomy-vocabulary-6field-district-category">', t('Admin Unit Tags search list is present on the page'), t('Devtrac'));

    // Tags.
    $this->assertRaw('<h2 class="block-title">Tags</h2>', t('Tags Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-field-fieldtriptags" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-field-fieldtriptags">', t('Tags search list is present on the page'), t('Devtrac'));

    // Purpose.
    $this->assertRaw('<h2 class="block-title">Purpose</h2>', t('Purpose Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-field-fieldtrip-fc-purposefield-fieldtrip-fc-purpose-purps" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-field-fieldtrip-fc-purposefield-fieldtrip-fc-purpose-purps">', t('Purpose search list is present on the page'), t('Devtrac'));

    // User.
    $this->assertRaw('<h2 class="block-title">User</h2>', t('User Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-author" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-author">', t('User search list is present on the page'), t('Devtrac'));

    // Manager.
    $this->assertRaw('<h2 class="block-title">Manager</h2>', t('Manager Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-authorfield-user-superior" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-authorfield-user-superior">', t('Manager search list is present on the page'), t('Devtrac'));

    // Check for fulltest search block.
    $this->assertRaw('<form id="facetapi-textfield-widget-form" class="facetapi-textfield-widget-form" action="fieldtrips" method="GET" onsubmit="return Drupal.facetapiTextfieldWidget.submitForm(search_api_aggregation_1)">
  <input type="textfield" name="search_api_aggregation_1" value="" />
  <div id="edit-actions" class="form-actions form-wrapper">
    <input type="submit" class="form-submit" value="Search" />
  </div>
</form>', t('Full text search block is present on the page'), t('Devtrac'));

    // Check for Field Trip counter.
    $this->assertRaw('<div class="current-search-item current-search-item-text current-search-item-results"><h3 class="">5 Field Trips</h3></div>', t('Current search counter is present on the page'), t('Devtrac'));

    // Check for table.
    // Columns and Headings.
    $this->assertRaw('<th class="views-field views-field-title" >
            Title          </th>', t('Title table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('fieldtrips?order=field_fieldtrip_status&amp;sort=asc" title="sort by Status" class="active">Status</a>          </th>', t('Status table column and heading is present on the page. This column is also sortable.'), t('Devtrac'));
    $this->assertRaw('<th data-hide="phone" class="views-field views-field-field-fieldtrip-start-end-date" >
            Start Date          </th>', t('Start Date table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('<th data-hide="phone" class="views-field views-field-field-fieldtrip-start-end-date-1" >
            End Date          </th>', t('End Date table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('<th data-hide="phone" class="views-field views-field-taxonomy-vocabulary-6" >
            Admin Unit          </th>', t('Admin Unit table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('<th data-hide="phone,tablet" class="views-field views-field-field-fieldtrip-user" >
            User          </th>', t('Resposible table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('/fieldtrips?order=author_field_user_superior&amp;sort=asc" title="sort by Manager" class="active">Manager</a>          </th>', t('Manager table column and heading is present on the page. This column is also sortable.'), t('Devtrac'));
    // $this->assertRaw('<th data-hide="phone" class="views-field views-field-virtual-field" >
    //                  </th>', t('Empty Button table column and heading is present on the page.'), t('Devtrac'));

    // Check that data is displayed in each column.
    $this->assertLink('Site visit to Looro piped water system', 0, t('Title column is filled.'), t('Devtrac'));
    $this->assertRaw('<td class="views-field views-field-field-fieldtrip-status" >
            Approved          </td>', t('Status column is filled.'), t('Devtrac'));
    $this->assertRaw('<td class="views-field views-field-field-fieldtrip-start-end-date" >
            <span class="date-display-single">27-03-2014</span>', t('Start Date column is filled.'), t('Devtrac'));
    $this->assertRaw('<td class="views-field views-field-field-fieldtrip-start-end-date-1" >
            <span class="date-display-single">29-03-2014</span>          </td>', t('End Date column is filled.'), t('Devtrac'));
    $this->assertLink('Amudat', 0, t('Admin Unit column is filled.'), t('Devtrac'));
    $this->assertRaw('<td class="views-field views-field-field-fieldtrip-user" >
                      </td>', t('User column is filled.'), t('Devtrac'));
    $this->assertRaw('/users/admin">admin</a>          </td>', t('Manager column is filled.'), t('Devtrac'));
    $this->assertLink('Edit', 0, t('Edit button is present.'), t('Devtrac'));
    $this->assertLink('Add Site Report', 0, t('Add Site Report button is present.'), t('Devtrac'));
    $this->assertNoLink('Delete', t('Delete button is not present.'), t('Devtrac'));

    // Check for date format.
    $this->assertPattern('/([012]?[1-9]|[12]0|3[01])\-(0?[1-9]|1[012])\-([0-9]{4})/', t('Date format is correct'), t('Devtrac'));

    // Check for Info pane text.
    $this->assertRaw('<div class="content clearfix">
      <p>A field trip is a detail of a trip by a Field worker to the field. It details the purpose of the field trip, the start and end date, the internal ID and any tags the user may be interested in labeling the Field trip with. The field trip page contains a dynamic list that can be filtered on many types of fields e.g Status, Date, etc.</p>
    </div>', t('Info pane is present on the page'), t('Devtrac'));

    // GRAPHS VIEW MODE.
    // Check that link to graphs view mode goes to the right page.
    $this->clickLink('graphs');
    $this->assertUrl($this->getAbsoluteUrl('/fieldtrips?display=graphs'), array(), t('User is redirected to the correct page when list view mode link is clicked.'), t('Devtrac'));

    // Check for Error Messages.
    $this->assertNoRaw('<h2 class="messages-label error">Error</h2>', t('There are no errors on this page'), t('Devtrac'));

    // Check for generic Main Menu Links.
    $this->assertLinkByHref('/sitereports', 0, t('Site Reports link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/statistics', 0, t('Statistics link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/adminunits', 0, t('Admin Units link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/locations', 0, t('Locations link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/actionitems', 0, t('Action Items link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips', 0, t('Field trips link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/images', 0, t('Images link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/users', 0, t('Users link is present on the page.'), t('Devtrac'));
    $this->assertLink('Log out', 0, t('LOG OUT link is present on the page.'), t('Devtrac'));

    // Check for view mode button links.
    $this->assertLinkByHref('/fieldtrips?display=default', 0, t('Default display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips?display=graphs', 0, t('Graphs display link is present on the page.'), t('Devtrac'));

    // Check that the my-profile menu is present.
    $this->assertLink('Welcome, Test', 0, t('My profile menu is present on the page.'), t('Devtrac'));
    $this->assertLink('Add Field Trip', 0, t('Add Field Trip link is present on the page.'), t('Devtrac'));
    $this->assertLink('Edit My Profile', 0, t('Edit My Profile link is present on the page.'), t('Devtrac'));

    // Check for Export links.
    $this->assertLink('Export', 0, t('Export link is present on the page.'), t('Devtrac'));
    $this->assertNoLinkByHref('/fieldtrips/analyse/csvadmin', t('Export to CSV (administrator version) link is  not present on the page.'), t('Devtrac'));
    $this->assertLink('Export to CSV', 0, t('Export to CSV link is present on the page.'), t('Devtrac'));
    $this->assertLink('Export to KML', 0, t('Export to KML link is present on the page.'), t('Devtrac'));
    $this->assertLink('Subscribe to RSS Feed', 0, t('Subscribe to RSS Feed link is present on the page.'), t('Devtrac'));

    // Check for Facet default state (expanded or collapsed).
    // Check.
    // 2 is collapsible, default open.
    // 3 is collapisble, default closed.

    // Admin Unit block id block-facetapi-n49vhffodlb6pbfilkpnopsnjcgu17ii.
    $this->assertRaw('"block-facetapi-n49vhffodlb6pbfilkpnopsnjcgu17ii":2', t('Admin Unit block is expanded by default.'), t('Devtrac'));

    // Date block id block-facetapi-jqiaevtcptm45t6mjy6iyrnrctomlddl.
    $this->assertRaw('"block-facetapi-jqiaevtcptm45t6mjy6iyrnrctomlddl":3', t('Date block is collapsed by default.'), t('Devtrac'));

    // Status block id block-facetapi-zrar0vddywhq9nwqylbat4xzhcdxcz6x.
    $this->assertRaw('"block-facetapi-zrar0vddywhq9nwqylbat4xzhcdxcz6x":3', t('Report block is collapsed by default.'), t('Devtrac'));

    // Admin Unit Tags block id block-facetapi-b62gimkp95sx9aofwy7kvpzd1yvsatgd.
    $this->assertRaw('"block-facetapi-b62gimkp95sx9aofwy7kvpzd1yvsatgd":3', t('Admin Unit Tags block is collapsed by default.'), t('Devtrac'));

    // Tags block id block-facetapi-56c5qjfqxuogmgg1mnjmochfouokxduj.
    $this->assertRaw('"block-facetapi-56c5qjfqxuogmgg1mnjmochfouokxduj":3', t('Tags block is collapsed by default.'), t('Devtrac'));

    // Purpose block id block-facetapi-jzaixysynllh9txga8mdmsyr86v1sxlw.
    $this->assertRaw('"block-facetapi-jzaixysynllh9txga8mdmsyr86v1sxlw":3', t('Purpose block is collapsed by default.'), t('Devtrac'));

    // User block id block-facetapi-uzhphpemgadagavmb0mebpqcl9o6wagc.
    $this->assertRaw('"block-facetapi-uzhphpemgadagavmb0mebpqcl9o6wagc":3', t('User block is collapsed by default.'), t('Devtrac'));

    // Manager block id block-facetapi-lcabek6godjxj8t0h2tn8zcctoadcgin.
    $this->assertRaw('"block-facetapi-lcabek6godjxj8t0h2tn8zcctoadcgin":3', t('Manager block is collapsed by default.'), t('Devtrac'));


    // Information pane block id block-pane-field-trips-info.
    $this->assertRaw('"block-pane-field-trips-info":3', t('Information pane block is collapsed by default.'), t('Devtrac'));

    // Check for Field Trip counter.
    $this->assertRaw('<div class="current-search-item current-search-item-text current-search-item-results"><h3 class="">5 Field Trips</h3></div>', t('Current search counter is present on the page'), t('Devtrac'));

    // Check for no : in Date.
    // High level.
    $this->assertNoPatternInBody('/([01]?[0-9]|[2][0-3])\:([0-5][0-9]|[6][0])/', t('No links with time found on a high level on the page.'), t('Devtrac'));
    // Low Level.
    $this->clickLinkUsingXpath('March 2014 ', 0, '//*[@id="facetapi-link--5"]');
    $this->clickLinkUsingXpath('March 27, 2014 ', 0, '//*[@id="facetapi-link--3"]');
    $this->assertNoPatternInBody('/([01]?[0-9]|[2][0-3])\:([0-5][0-9]|[6][0])/', t('No links with time found on a high level on the page.'), t('Devtrac'));

    $this->drupalGet('');
    $this->clickLink('Field trips');
    $this->clickLink('graphs');

    // Check for order of Facets.
    $order = array('Admin Unit', 'Status', 'Admin Unit Tags', 'Date', 'Purposes', 'Tags', 'Author', 'Manager');
    $this->assertFacetOrder($order, t('Facets are in the correct order.'), t('Devtrac'));

    // Search Api Elements.
    // Check for Facets.

    // Admin Unit.
    $this->assertRaw('<h2 class="block-title">Admin Unit</h2>', t('Admin Unit Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-6" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-taxonomy-vocabulary-6">', t('Admin Unit search list is present on the page'), t('Devtrac'));

    // Date.
    $this->assertRaw('<h2 class="block-title">Date</h2>', t('Date Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-field-fieldtrip-start-end-datevalue" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-field-fieldtrip-start-end-datevalue">', t('Due Date search list is present on the page'), t('Devtrac'));

    // Status.
    $this->assertRaw('<h2 class="block-title">Status</h2>', t('Status Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-field-fieldtrip-status" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-field-fieldtrip-status">', t('Status search list is present on the page'), t('Devtrac'));

    // Admin Unit Tags.
    $this->assertRaw('<h2 class="block-title">Admin Unit Tags</h2>', t('Admin Unit Tags Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-6field-district-category" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-taxonomy-vocabulary-6field-district-category">', t('Admin Unit Tags search list is present on the page'), t('Devtrac'));

    // Tags.
    $this->assertRaw('<h2 class="block-title">Tags</h2>', t('Tags Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-field-fieldtriptags" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-field-fieldtriptags">', t('Tags search list is present on the page'), t('Devtrac'));

    // Purpose.
    $this->assertRaw('<h2 class="block-title">Purpose</h2>', t('Purpose Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-field-fieldtrip-fc-purposefield-fieldtrip-fc-purpose-purps" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-field-fieldtrip-fc-purposefield-fieldtrip-fc-purpose-purps">', t('Purpose search list is present on the page'), t('Devtrac'));

    // User.
    $this->assertRaw('<h2 class="block-title">User</h2>', t('User Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-author" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-author">', t('User search list is present on the page'), t('Devtrac'));

    // Manager.
    $this->assertRaw('<h2 class="block-title">Manager</h2>', t('Manager Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-authorfield-user-superior" id="facetapi-facet-search-apidevtrac-solr-field-trip-index-block-authorfield-user-superior">', t('Manager search list is present on the page'), t('Devtrac'));

    // Check for fulltest search block.
    $this->assertRaw('<form id="facetapi-textfield-widget-form" class="facetapi-textfield-widget-form" action="fieldtrips" method="GET" onsubmit="return Drupal.facetapiTextfieldWidget.submitForm(search_api_aggregation_1)">
  <input type="textfield" name="search_api_aggregation_1" value="" />
  <input type="hidden" name="display" value="graphs" />
  <div id="edit-actions" class="form-actions form-wrapper">
    <input type="submit" class="form-submit" value="Search" />
  </div>
</form>', t('Full text search block is present on the page'), t('Devtrac'));

    // Check for Field Trip counter.
    $this->assertRaw('<div class="current-search-item current-search-item-text current-search-item-results"><h3 class="">5 Field Trips</h3></div>', t('Current search counter is present on the page'), t('Devtrac'));

    // Check for the quicktabs.
    // Status.
    $this->assertRaw('/fieldtrips?display=graphs&amp;qt-devtrac_fieldtrips_graphs_tabs=0#qt-devtrac_fieldtrips_graphs_tabs" id="quicktabs-tab-devtrac_fieldtrips_graphs_tabs-0" class="quicktabs-tab quicktabs-tab-qtabs quicktabs-tab-qtabs-devtrac-fieldtrips-graphs-status active">Status</a>', t('Status quicktab is present on the page'), t('Devtrac'));
    $this->assertLink('Status', 0, t('Status Quicktab is labeled'), t('Devtrac'));

    // Purpose.
    $this->assertRaw('/fieldtrips?display=graphs&amp;qt-devtrac_fieldtrips_graphs_tabs=1#qt-devtrac_fieldtrips_graphs_tabs" id="quicktabs-tab-devtrac_fieldtrips_graphs_tabs-1" class="quicktabs-tab quicktabs-tab-block quicktabs-tab-block-d88ce268d9b5130026d64610348784a6 active">Purpose</a>', t('Purpose quicktab is present on the page'), t('Devtrac'));
    $this->assertLink('Purpose', 0, t('Priority Quicktab is labeled'), t('Devtrac'));

    // Date Created.
    $this->assertRaw('/fieldtrips?display=graphs&amp;qt-devtrac_fieldtrips_graphs_tabs=2#qt-devtrac_fieldtrips_graphs_tabs" id="quicktabs-tab-devtrac_fieldtrips_graphs_tabs-2" class="quicktabs-tab quicktabs-tab-block quicktabs-tab-block-f6fbe85cdf0195cb058bf703d1f33181 active">Date Created</a>', t('Date Created quicktab is present on the page'), t('Devtrac'));
    $this->assertLink('Date Created', 0, t('Date Created Quicktab is labeled'), t('Devtrac'));

    // Districts.
    $this->assertRaw('/fieldtrips?display=graphs&amp;qt-devtrac_fieldtrips_graphs_tabs=3#qt-devtrac_fieldtrips_graphs_tabs" id="quicktabs-tab-devtrac_fieldtrips_graphs_tabs-3" class="quicktabs-tab quicktabs-tab-block quicktabs-tab-block-37b9411771f798a6bdaf2145e2043865 active">Districts</a>', t('Districts quicktab is present on the page'), t('Devtrac'));
    $this->assertLink('Districts', 0, t('Districts Quicktab is labeled'), t('Devtrac'));

    // Users.
    $this->assertRaw('/fieldtrips?display=graphs&amp;qt-devtrac_fieldtrips_graphs_tabs=4#qt-devtrac_fieldtrips_graphs_tabs" id="quicktabs-tab-devtrac_fieldtrips_graphs_tabs-4" class="quicktabs-tab quicktabs-tab-block quicktabs-tab-block-941745c7314247fa977f090d80c21eff active">Users</a>', t('Users quicktab is present on the page'), t('Devtrac'));

    // ENABLING A FILTER.
    $this->assertRaw('/fieldtrips?display=graphs&amp;f[0]=field_fieldtrip_status%3AApproved"', t('Filter by Approved Status link is present on the page.'), t('Devtrac'));
    // $this->drupalGet('?display=graphs&f[0]=field_fieldtrip_status%3AApproved');
    $this->clickLinkUsingXpath('Approved', 0, '//*[@id="facetapi-link--10"]');

    // Check for current search block.
    $this->assertRaw('<div class="block block-current-search block-devtrac7-fieldtrips-activefacets block-current-search-devtrac7-fieldtrips-activefacets odd block-without-title" id="block-current-search-devtrac7-fieldtrips-activefacets">
  <div class="block-inner clearfix">
                
    <div class="content clearfix">
      <div class="current-search-item current-search-item-devtracgroup current-search-item-devtrac7-fieldtrips-fieldgroup">', t('Current search block is visible when a filter is clicked.'), t('Devtrac'));
    $this->assertRaw('/fieldtrips?display=graphs" rel="nofollow" class="field-fieldtrip-status beautytips" title="Status">Approved [X] <span class="element-invisible"> Remove Approved filter </span></a></li></ul></div></div>    </div>
', t('Current search link to remove the filter  is present after a filter is clicked.'), t('Devtrac'));

    // Check main menu links.
    $this->assertLinkByHref('/sitereports?display=graphs&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Site Reports link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/statistics?display=graphs&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Statistics link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/adminunits?display=graphs&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Admin Units link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/locations?display=graphs&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Locations link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/images?display=graphs&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Images link is present on the page.'), t('Devtrac'));

    // Check for view mode button links.
    $this->assertLinkByHref('/fieldtrips?display=default&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Default display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips?display=graphs&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Graphs display link is present on the page.'), t('Devtrac'));

    // Check for Export links.
    $this->assertLinkByHref('/fieldtrips/analyse/csv?display=graphs&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Export to CSV link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips/analyse/kml?display=graphs&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Export to KML link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips/analyse/rss?display=graphs&f[0]=field_fieldtrip_status%3AApproved', 0, t('Filtered Subscribe to RSS Feed link is present on the page.'), t('Devtrac'));

    
    $this->drupalGet('');
    $this->clickLink('Field trips');
    $this->clickLink('graphs');

    // EXPORTS.
    // CSV.
    $this->clickLink('Export to CSV', 0);

    // Check for column names.
    $this->assertRaw('"UUID","Title","Narrative","Public Summary","Admin Unit","Locations","Status","Approval Date","Approved By","Start and End Date","User","URL"', t('All column names are present.'), t('Devtrac'));

    // Check for count of column names.
    $length = 141;
    $column_names_line = substr($this->drupalGetContent(), 0, $length);
    $this->verbose($column_names_line);
    $column_names = preg_split("/[,]+/", $column_names_line);
    $this->verbose(var_export($column_names, TRUE));
    if (count($column_names) == 12) {
      $this->pass(t('CSV Column count is correct.'), t('Devtrac'));
    }
    else {
      $this->fail(t('CSV Column Count is wrong.'), t('Devtrac'));
    }

    // Fields.
    // UUID (Subject to change).
    // $this->assertRaw('"72262913-b484-4252-b6fc-935a3638bc63"',t('UUID field is filled.'), t('Devtrac'));
    // Title.
    $this->assertRaw('"Site visit to Looro piped water system"', t('Title field is filled.'), t('Devtrac'));
    // Narrative.
    //$this->assertRaw('"Infectious disease control"', t('Narrative field is filled.'), t('Devtrac'));
    // Public Summary.
    // $this->assertRaw('72262913-b484-4252-b6fc-935a3638bc63/uuid/node/e8d12f48-5b5d-439e-85ea-d1785ffbf7d6"',
    // t('Public Summary field is filled.'), t('Devtrac'));
    // Admin Unit.
    $this->assertRaw('"Amudat"',t('Admin Unit field is filled.'), t('Devtrac'));
    // Locations.
    $this->assertRaw('"Loroo Piped Water, Loroo Piped Water, Loroo Piped Water, Loroo Piped Water, Loroo Piped Water"', t('Locations field is filled.'), t('Devtrac'));
    // Status.
    $this->assertRaw('"Approved"',t('Status field is filled.'), t('Devtrac'));
    // Approval Date.
    //$this->assertRaw('"31-01-2015"', t('Approval Date field is filled.'), t('Devtrac'));
    // Approved By.
    //$this->assertRaw('"31-01-2015"', t('Approved By field is filled.'), t('Devtrac'));
    // Start and End date.
    $this->assertRaw('"27-03-2014 to 29-03-2014"', t('Start and End date field is filled.'), t('Devtrac'));
    // User.
    //$this->assertRaw('"admin"', t('User field is filled.'), t('Devtrac'));
    // URL (Subject to change).
    // $this->assertRaw('/uuid/node/72262913-b484-4252-b6fc-935a3638bc63"',
    // t('URL field is filled.'), t('Devtrac'));

    // KML.
    $this->drupalGet('');
    $this->clickLink('Field trips');
    $this->clickLink('graphs');
    $this->clickLink('Export to KML', 0);
    // Name : Title.
    $this->assertRaw('<name>
    <![CDATA[Site visit to Looro piped water system]]>
  </name>', t('Name field is mapped correctly.'), t('Devtrac'));
    // Description : Report.
    $this->assertNoRaw('<description>
    <![CDATA[]]>
  </description>', t('Description field is mapped correctly.'), t('Devtrac'));
    // Point : Lon - Lat.
    $this->assertNoRaw('<Point>
    <coordinates>,,0</coordinates>
  </Point>', t('Coordinates field is mapped correctly.'), t('Devtrac'));

    // RSS Feeds.
    $this->drupalGet('');
    $this->clickLink('Field trips');
    $this->clickLink('graphs');
    $this->clickLink('Subscribe to RSS Feed', 0);

    // Core items.
    // Title : title.
    $this->assertRaw('<title>Site visit to Looro piped water system</title>', t('Title is mapped correctly'), t('Devtrac'));
    // Link : title (Subject to change).
    $this->assertRaw('<link>Site visit to Looro piped water system</link>', t('Link is mapped correctly'), t('Devtrac'));
    // Description : Public Summary.
    //$this->assertRaw('/fieldtrips/analyse/feed?display=graphs">RSS Feed</source>', t('Public Summary is mapped correctly'), t('Devtrac'));
    // Author : user.
    // $this->assertRaw('<author>admin</author>', t('Author is mapped correctly'), t('Devtrac'));
    // Category : Status.
    $this->assertRaw('<category>Approved</category>', t('Category is mapped correctly'), t('Devtrac'));
    // Published Date : Start and End Date (Subject to change).
    $this->assertRaw('<pubDate>&lt;span class=&quot;date-display-start&quot;&gt;27-03-2014&lt;/span&gt; to &lt;span class=&quot;date-display-end&quot;&gt;29-03-2014&lt;/span&gt;</pubDate>', t('Published Date is mapped correctly'), t('Devtrac'));

    // dc items.
    // Title : title.
    $this->assertRaw('<dc:title>Site visit to Looro piped water system</dc:title>', t('dc Title is mapped correctly'), t('Devtrac'));
    // Creator : User.
    // $this->assertRaw('<dc:creator>admin</dc:creator>', t('dc Author is mapped correctly'), t('Devtrac'));
    // Subject : Status.
    $this->assertRaw('<dc:subject>Approved</dc:subject>', t('dc Subject is mapped correctly'), t('Devtrac'));
    // Description : Public Summary.
    // $this->assertRaw('/fieldtrips/analyse/feed?display=graphs">RSS Feed</source>', t('Public Summary is mapped correctly'), t('Devtrac'));
    // Publisher : User.
    // $this->assertRaw('<author>admin</author>', t('Publisher is mapped correctly'), t('Devtrac'));
    // Date : Start and End Date (Subject to change).
    $this->assertRaw('<dc:date>&lt;span class=&quot;date-display-start&quot;&gt;27-03-2014&lt;/span&gt; to &lt;span class=&quot;date-display-end&quot;&gt;29-03-2014&lt;/span&gt;</dc:date>', t('Published Date is mapped correctly'), t('Devtrac'));
    // Type : Status.
    $this->assertRaw('<dc:type>Approved</dc:type>', t('Type is mapped correctly'), t('Devtrac'));

  }
}
