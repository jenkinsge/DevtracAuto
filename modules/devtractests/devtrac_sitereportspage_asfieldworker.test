<?php

/**
 * @file
 * Visit the Site Reports page as an Anonymous user and check that all is as
 * should be.
 */


// Make sure simpletest_clone is available
module_load_include('test', 'simpletest_clone');

/**
 * Checks that when the Site Reports page is viewed by a field worker, the
 * page and its content is all present and working as it should.
 */
class VisitSiteReportsAsFieldWorkerTestCase extends SimpleTestCloneTestCase {
  protected $profile = 'devtrac';

  public function validateDate($date, $format = 'd-m-Y') {
    $d = DateTime::createFromFormat($format, $date);
    return $d && $d->format($format) == $date;
    }

  /**
   * Creates a user with the given role.
   */
  public function drupalCreateUserWithRole($role) {
    $roles = user_roles();
    $index = array_search($role, $roles);
    $permissions = user_role_permissions(array(array_search($role, $roles) => $role));
    $user = $this->drupalCreateUser(array_keys($permissions[$index]));
    $user->roles[$index] = $role;
    return user_save($user);
    }

  /**
   * The getInfo function.
   */
  public static function getInfo() {
    return array(
      'name' => 'Site Reports page as a Field Worker',
      'description' => 'Visit Site Reports page as a Field Worker and check that all is as should be.',
      'group' => 'Devtrac',
    );
  }

  /**
   * The setUp function.
   */
  public function setUp() {
    $this->public_files_directory = variable_get('file_public_path');
    parent::setUp(array('devtractests', 'devtrac_to_devtrac_importer', 'devtrac_to_devtrac_demodata'));

    // Adding Admin Unit tags.

    $vocabularies = entity_load('taxonomy_vocabulary', NULL, array('machine_name' => 'district_category'));
    $vocabulary = reset($vocabularies);
    $vid = $vocabulary->vid;

    $newterm = new stdClass();
    $newterm->name = 'Tag 1';
    $newterm->vid = $vid;
    $newterm->parent = 0;
    taxonomy_term_save($newterm);

    $newterm1 = new stdClass();
    $newterm1->name = 'Tag 2';
    $newterm1->vid = $vid;
    $newterm1->parent = 0;
    taxonomy_term_save($newterm1);

    // Running cron twice so mapit can lookup the admin units.
    $this->cronRun();
    $this->cronRun();
    
    // Create a field worker.
    $user = $this->drupalCreateUserWithRole('field worker');
    $this->drupalLogin($user);

  }

  /**
   * Assess 'Site Reports' page as a field worker.
   */
  public function testSiteReportsPageAccessFieldWorker() {
    $this->drupalGet('');
    $this->assertNoText(t('Access denied'), t('Field Worker is permitted to visit the Site Reports page.'), t('Devtrac'));
  }

  /**
   * Check that all generic content is present.
   *
  public function testPresenceOfGenericContentFieldWorker() {
    $this->drupalGet('');

    // Check for Error Messages.
    $this->assertNoRaw('<h2 class="messages-label error">Error</h2>', t('There are no errors on this page'), t('Devtrac'));

    // Check for Built by Mountbatten footer text.
    $this->assertRaw('<p><span id="project-info-footer"><a href="http://www.devtrac.org" title="Devtrac">www.devtrac.org</a> | Built by  <a href="http://www.mountbatten.net/">Mountbatten Ltd</a> | Originally developed for <a href="http://www.unicef.org/uganda">Unicef Uganda</a> Â© 2015<br /></span></p>',
        'Correct Project Information is displayed on the page',
        'Devtrac');

    // Check for link to devtrac.
    $this->assertLinkByHref('http://www.devtrac.org', 0, t('There is a link to devtrac.org on the page.'), t('Devtrac'));

    // Map view mode.
    // Check for generic Main Menu Links.
    $this->assertLinkByHref('/sitereports', 0, t('Site Reports link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/statistics', 0, t('Statistics link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/adminunits', 0, t('Admin Units link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/locations', 0, t('Locations link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/actionitems', 0, t('Action Items link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips', 0, t('Field trips link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/images', 0, t('Images link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/users', 0, t('Users link is present on the page.'), t('Devtrac'));
    $this->assertLink('Sign out', 0, t('SIGN OUT link is present on the page.'), t('Devtrac'));

    // Check for view mode button links.
    $this->assertLinkByHref('/sitereports?display=default', 0, t('Default display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports?display=list', 0, t('List display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports?display=graphs', 0, t('Graphs display link is present on the page.'), t('Devtrac'));

    // Check that the my-profile menu is absent.
    $this->assertRaw('<a href="/user" title="">Welcome,', t('My profile menu is present on the page.'), t('Devtrac'));
    $this->assertLink('Add Field Trip', 0, t('Add Field Trip link is present on the page.'), t('Devtrac'));
    $this->assertLink('Edit My Profile', 0, t('Edit My Profile link is present on the page.'), t('Devtrac'));

    // Check for Export links.
    $this->assertLink('Export', 0, t('Export link is present on the page.'), t('Devtrac'));
    $this->assertNoLinkByHref('/sitereports/analyse/csvadmin', t('Export to CSV (administrator version) link is not present on the page.'), t('Devtrac'));
    $this->assertLink('Export to CSV', 0, t('Export to CSV link is present on the page.'), t('Devtrac'));
    $this->assertLink('Export to KML', 0, t('Export to KML link is present on the page.'), t('Devtrac'));
    $this->assertLink('Subscribe to RSS Feed', 0, t('Subscribe to RSS Feed link is present on the page.'), t('Devtrac'));

    // Search Api Elements.
    // Check for Facets.
    $this->assertRaw('\u003Ch2 class=\u0022block-title\u0022\u003EReport\u003C\/h2\u003E\n', t('Report Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('div class=\u0022item-list\u0022\u003E\u003Cul class=\u0022facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-7\u0022 id=\u0022facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-7\u0022\u003E\u003C', t('Report search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Report search list is expanded by default on the page'), t('Devtrac'));

    $this->assertRaw('\u003Ch2 class=\u0022block-title\u0022\u003EAdmin Unit\u003C\/h2\u003E\n', t('Admin Unit Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('div class=\u0022item-list\u0022\u003E\u003Cul class=\u0022facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-6\u0022 id=\u0022facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-6\u0022\u003E\u003C', t('Admin Unit search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Admin Unit search list is expanded by default on the page'), t('Devtrac'));

    $this->assertRaw('\u003Ch2 class=\u0022block-title\u0022\u003ESector\u003C\/h2\u003E\n', t('Sector Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('div class=\u0022item-list\u0022\u003E\u003Cul class=\u0022facetapi-search-api-swatches facetapi-facet-taxonomy-vocabulary-8\u0022 id=\u0022facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-8\u0022\u003E\u003C', t('Sector search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Sector search list is collapsed by default on the page'), t('Devtrac'));

    $this->assertRaw('\u003Ch2 class=\u0022block-title\u0022\u003EDate Visited\u003C\/h2\u003E\n', t('Date Visited Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('div class=\u0022item-list\u0022\u003E\u003Cul class=\u0022facetapi-facetapi-date-only-links facetapi-facet-field-ftritem-date-visited\u0022 id=\u0022facetapi-facet-search-apidevtrac-solr-site-visits-index-block-field-ftritem-date-visited\u0022\u003E\u003C', t('Date Visited search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Date Visited search list is collapsed by default on the page'), t('Devtrac'));

    $this->assertRaw('\u003Ch2 class=\u0022block-title\u0022\u003ELocation\u003C\/h2\u003E\n', t('Location Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('div class=\u0022item-list\u0022\u003E\u003Cul class=\u0022facetapi-search-api-swatches facetapi-facet-taxonomy-vocabulary-1parents-all\u0022 id=\u0022facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-1parents-all\u0022\u003E\u003C', t('Location search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Location search list is collapsed by default on the page'), t('Devtrac'));

    // User.
    $this->assertRaw('\u003Ch2 class=\u0022block-title\u0022\u003EUser\u003C\/h2\u003E\n', t('User Heading is present on the page'), t('Devtrac'));

    // Manager.
    $this->assertRaw('\u003Ch2 class=\u0022block-title\u0022\u003EManager\u003C\/h2\u003E\n', t('Manager Heading is present on the page'), t('Devtrac'));

    // Check for fulltest search block.
    $this->assertRaw('\u003Cform id=\u0022facetapi-textfield-widget-form\u0022 class=\u0022facetapi-textfield-widget-form\u0022 action=\u0022sitereports\u0022 method=\u0022GET\u0022 onsubmit=\u0022return Drupal.facetapiTextfieldWidget.submitForm(search_api_aggregation_1)\u0022\u003E\n  \u003Cinput type=\u0022textfield\u0022 name=\u0022search_api_aggregation_1\u0022 value=\u0022\u0022 \/\u003E\n  \u003Cdiv id=\u0022edit-actions\u0022 class=\u0022form-actions form-wrapper\u0022\u003E\n    \u003Cinput type=\u0022submit\u0022 class=\u0022form-submit\u0022 value=\u0022Search\u0022 \/\u003E\n  \u003C\/div\u003E\n\u003C\/form\u003E', t('Full text search block is present on the page'), t('Devtrac'));

    // Check for Site Report counter.
    $this->assertRaw('<div class="current-search-item current-search-item-text current-search-item-results"><h3 class="">6 Site Reports</h3></div>', t('Current search counter is present on the page'), t('Devtrac'));

    // List view mode.
    // Check that link to list view mode goes to the right page.
    $this->clickLink('List');
    $this->assertUrl($this->getAbsoluteUrl('/?display=list'), array(), t('User is redirected to the correct page when list view mode link is clicked.'), t('Devtrac'));

    // Check for generic Main Menu Links.
    $this->assertLinkByHref('/sitereports', 0, t('Site Reports link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/statistics', 0, t('Statistics link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/adminunits', 0, t('Admin Units link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/locations', 0, t('Locations link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/actionitems', 0, t('Action Items link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips', 0, t('Field trips link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/images', 0, t('Images link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/users', 0, t('Users link is present on the page.'), t('Devtrac'));
    $this->assertLink('Sign in', 0, t('SIGN IN link is present on the page.'), t('Devtrac'));

    // Check for view mode button links.
    $this->assertLinkByHref('/sitereports?display=default', 0, t('Default display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports?display=list', 0, t('List display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports?display=graphs', 0, t('Graphs display link is present on the page.'), t('Devtrac'));

    // Check that the my-profile menu is absent.
    $this->assertRaw('<a href="/user" title="">Welcome,', t('My profile menu is not present on the page.'), t('Devtrac'));
    $this->assertLink('Add Field Trip', 0, t('Add Field Trip link is present on the page.'), t('Devtrac'));
    $this->assertLink('Edit My Profile', 0, t('Edit My Profile link is present on the page.'), t('Devtrac'));

    // Check for Export links.
    $this->assertLink('Export', 0, t('Export link is present on the page.'), t('Devtrac'));
    $this->assertNoLinkByHref('/sitereports/analyse/csvadmin', t('Export to CSV (administrator version) link is  not present on the page.'), t('Devtrac'));
    $this->assertLink('Export to CSV', 0, t('Export to CSV link is present on the page.'), t('Devtrac'));
    $this->assertLink('Export to KML', 0, t('Export to KML link is present on the page.'), t('Devtrac'));
    $this->assertLink('Subscribe to RSS Feed', 0, t('Subscribe to RSS Feed link is present on the page.'), t('Devtrac'));

    // Search Api Elements.
    // Check for Facets.
    $this->assertRaw('<h2 class="block-title">Report</h2>', t('Report Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-7" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-7">', t('Report search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Report search list is expanded by default on the page'), t('Devtrac'));

    $this->assertRaw('<h2 class="block-title">Admin Unit</h2>', t('Admin Unit Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-6" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-6">', t('Admin Unit search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Admin Unit search list is expanded by default on the page'), t('Devtrac'));

    $this->assertRaw('<h2 class="block-title">Sector</h2>', t('Sector Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-search-api-swatches facetapi-facet-taxonomy-vocabulary-8" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-8">', t('Sector search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Sector search list is collapsed by default on the page'), t('Devtrac'));

    $this->assertRaw('<h2 class="block-title">Date Visited</h2>', t('Date Visited Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-date-only-links facetapi-facet-field-ftritem-date-visited" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-field-ftritem-date-visited">', t('Date Visited search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Date Visited search list is collapsed by default on the page'), t('Devtrac'));

    $this->assertRaw('<h2 class="block-title">Location</h2>', t('Location Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-search-api-swatches facetapi-facet-taxonomy-vocabulary-1parents-all" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-1parents-all">', t('Location search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Location search list is collapsed by default on the page'), t('Devtrac'));

    // Check for fulltest search block.
    $this->assertRaw('<form id="facetapi-textfield-widget-form" class="facetapi-textfield-widget-form" action="sitereports" method="GET" onsubmit="return Drupal.facetapiTextfieldWidget.submitForm(search_api_aggregation_1)">
  <input type="textfield" name="search_api_aggregation_1" value="" />
  <input type="hidden" name="display" value="list" />
  <div id="edit-actions" class="form-actions form-wrapper">
    <input type="submit" class="form-submit" value="Search" />
  </div>
</form>', t('Full text search block is present on the page'), t('Devtrac'));

    // Check for Site Report counter.
    $this->assertRaw('<div class="current-search-item current-search-item-text current-search-item-results"><h3 class="">6 Site Reports</h3></div>', t('Current search counter is present on the page'), t('Devtrac'));

    // Check for table.
    // Columns and Headings.
    $this->assertRaw('<th data-class="expand" class="views-field views-field-title" >
            Title          </th>', t('Title table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('<th data-hide="phone" class="views-field views-field-taxonomy-vocabulary-7" >
            Site Report Type          </th>', t('Site Report Type table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('<th data-hide="phone" class="views-field views-field-taxonomy-vocabulary-8" >
            Sector          </th>', t('Sector table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('<th data-hide="phone" class="views-field views-field-taxonomy-vocabulary-6" >
            Admin Unit          </th>', t('Admin Unit table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('<th class="views-field views-field-author" data-hide="phone">
            User          </th>', t('User table column and heading is present on the page.'), t('Devtrac'));
    $this->assertRaw('/sitereports?display=list&amp;order=field_ftritem_date_visited&amp;sort=asc" title="sort by Visited on" class="active">Visited on', t('Visited On table column and heading is present on the page. This column is also sortable.'), t('Devtrac'));
    $this->assertRaw('<th data-hide="phone" class="views-field views-field-virtual-field" >
                      </th>', t('Empty Button table column and heading is present on the page.'), t('Devtrac'));

    // Check that data is displayed in each column.
    $this->assertLink('Site Visit at Loroo Piped Water', 0, t('Site Visit column is filled.'), t('Devtrac'));
    $this->assertRaw('<td class="views-field views-field-taxonomy-vocabulary-7" >
            Site Visit          </td>', t('Site Report Type column is filled.'), t('Devtrac'));
    $this->assertRaw('width="16" height="16" alt="Basic drinking water supply and basic sanitation" title="Basic drinking water supply and basic sanitation" /></a>', t('Sector column is filled'), t('Devtrac'));
    $this->assertLink('Amudat', 0, t('Admin Unit column is filled.'), t('Devtrac'));
    $this->assertRaw('<td class="views-field views-field-field-ftritem-date-visited active" >
            <span class="date-display-single">02-11-2014</span>', t('Visited On column is filled.'), t('Devtrac'));
    $this->assertRaw('<th class="views-field views-field-virtual-field" data-hide="phone">
                      </th>', t('Empty Button table heading is present on the page'), t('Devtrac'));
    $this->assertLink('Edit', 0, t('Edit button is present.'), t('Devtrac'));
    $this->assertLink('Delete', 0, t('Delete button is present.'), t('Devtrac'));

    // Check for date format.

    // Check for Info pane text.
    $this->assertText('These are reports that are filled in at a visited Location. It includes all details about the visit. These include a narrative report, the sector of intervention at the location, the date visited and a descriptive title that can be understood clearly.', t('Info pane text is present on the page'), t('Devtrac'));

    // Charts view mode.
    // Check that link to graphs view mode goes to the right page.
    $this->clickLink('Graphs');
    $this->assertUrl($this->getAbsoluteUrl('/?display=graphs'), array(), t('User is redirected to the correct page when list view mode link is clicked.'), t('Devtrac'));

    // Check for generic Main Menu Links.
    $this->assertLinkByHref('/sitereports', 0, t('Site Reports link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/statistics', 0, t('Statistics link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/adminunits', 0, t('Admin Units link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/locations', 0, t('Locations link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/actionitems', 0, t('Action Items link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/fieldtrips', 0, t('Field trips link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/images', 0, t('Images link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/users', 0, t('Users link is present on the page.'), t('Devtrac'));
    $this->assertLink('Sign in', 0, t('SIGN IN link is present on the page.'), t('Devtrac'));

    // Check for view mode button links.
    $this->assertLinkByHref('/sitereports?display=default', 0, t('Default display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports?display=list', 0, t('List display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports?display=graphs', 0, t('Graphs display link is present on the page.'), t('Devtrac'));

    // Check that the my-profile menu is absent.
    $this->assertRaw('<a href="/user" title="">Welcome,', t('My profile menu is present on the page.'), t('Devtrac'));
    $this->assertLink('Add Field Trip', 0, t('Add Field Trip link is present on the page.'), t('Devtrac'));
    $this->assertLink('Edit My Profile', 0, t('Edit My Profile link is present on the page.'), t('Devtrac'));

    // Check for Export links.
    $this->assertLink('Export', 0, t('Export link is present on the page.'), t('Devtrac'));
    $this->assertNoLinkByHref('/sitereports/analyse/csvadmin', t('Export to CSV (administrator version) link is  not present on the page.'), t('Devtrac'));
    $this->assertLink('Export to CSV', 0, t('Export to CSV link is present on the page.'), t('Devtrac'));
    $this->assertLink('Export to KML', 0, t('Export to KML link is present on the page.'), t('Devtrac'));
    $this->assertLink('Subscribe to RSS Feed', 0, t('Subscribe to RSS Feed link is present on the page.'), t('Devtrac'));

    // Search Api Elements.
    // Check for Facets.
    $this->assertRaw('<h2 class="block-title">Report</h2>', t('Report Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-7" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-7">', t('Report search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Report search list is expanded by default on the page'), t('Devtrac'));

    $this->assertRaw('<h2 class="block-title">Admin Unit</h2>', t('Admin Unit Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-links facetapi-facet-taxonomy-vocabulary-6" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-6">', t('Admin Unit search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Admin Unit search list is expanded by default on the page'), t('Devtrac'));

    $this->assertRaw('<h2 class="block-title">Sector</h2>', t('Sector Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-search-api-swatches facetapi-facet-taxonomy-vocabulary-8" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-8">', t('Sector search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Sector search list is collapsed by default on the page'), t('Devtrac'));

    $this->assertRaw('<h2 class="block-title">Date Visited</h2>', t('Date Visited Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-facetapi-date-only-links facetapi-facet-field-ftritem-date-visited" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-field-ftritem-date-visited">', t('Date Visited search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Date Visited search list is collapsed by default on the page'), t('Devtrac'));

    $this->assertRaw('<h2 class="block-title">Location</h2>', t('Location Heading is present on the page'), t('Devtrac'));
    $this->assertRaw('<div class="item-list"><ul class="facetapi-search-api-swatches facetapi-facet-taxonomy-vocabulary-1parents-all" id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-1parents-all">', t('Location search list is present on the page'), t('Devtrac'));
    // $this->assertRaw('', t('Location search list is collapsed by default on the page'), t('Devtrac'));

    // Check for fulltest search block.
    $this->assertRaw('<form id="facetapi-textfield-widget-form" class="facetapi-textfield-widget-form" action="sitereports" method="GET" onsubmit="return Drupal.facetapiTextfieldWidget.submitForm(search_api_aggregation_1)">
  <input type="textfield" name="search_api_aggregation_1" value="" />
  <input type="hidden" name="display" value="graphs" />
  <div id="edit-actions" class="form-actions form-wrapper">
    <input type="submit" class="form-submit" value="Search" />
  </div>
</form>', t('Full text search block is present on the page'), t('Devtrac'));

    // Check for Site Report counter.
    $this->assertRaw('<div class="current-search-item current-search-item-text current-search-item-results"><h3 class="">6 Site Reports</h3></div>', t('Current search counter is present on the page'), t('Devtrac'));

    // Check for the quicktabs.
    // Location Type.
    $this->assertRaw('/sitereports?display=graphs&amp;qt-devtrac_sitereports_graphs_tabs=0#qt-devtrac_sitereports_graphs_tabs" id="quicktabs-tab-devtrac_sitereports_graphs_tabs-0" class="quicktabs-tab quicktabs-tab-qtabs quicktabs-tab-qtabs-devtrac-sitereports-graphs-place active">Location Type</a>', t('Location Type quicktab is present on the page'), t('Devtrac'));
    $this->assertLink('Location Type', 0, t('Location Type Quicktab is labeled'), t('Devtrac'));
    // Pie.
    $this->assertRaw('/sitereports?display=graphs&amp;qt-devtrac_sitereports_graphs_place=0#qt-devtrac_sitereports_graphs_place" id="quicktabs-tab-devtrac_sitereports_graphs_place-0"', t('Pie quicktab is present on the page'), t('Devtrac'));
    $this->assertLink('Pie', 0, t('Pie Quicktab is labeled'), t('Devtrac'));
    // Bar.
    $this->assertRaw('/sitereports?display=graphs&amp;qt-devtrac_sitereports_graphs_place=1#qt-devtrac_sitereports_graphs_place" id="quicktabs-tab-devtrac_sitereports_graphs_place-1"', t('Bar quicktab is present on the page'), t('Devtrac'));
    $this->assertLink('Bar', 0, t('Bar Quicktab is labeled'), t('Devtrac'));

    // Sector.
    $this->assertRaw('/sitereports?display=graphs&amp;qt-devtrac_sitereports_graphs_tabs=1#qt-devtrac_sitereports_graphs_tabs" id="quicktabs-tab-devtrac_sitereports_graphs_tabs-1"', t('Sectors quicktab is present on the page'), t('Devtrac'));
    $this->assertLink('Sectors', 0, t('Sectors Quicktab is labeled'), t('Devtrac'));

    // Districts.
    $this->assertRaw('/sitereports?display=graphs&amp;qt-devtrac_sitereports_graphs_tabs=2#qt-devtrac_sitereports_graphs_tabs" id="quicktabs-tab-devtrac_sitereports_graphs_tabs-2"', t('Districts quicktab is present on the page'), t('Devtrac'));
    $this->assertLink('Districts', 0, t('Districts Quicktab is labeled'), t('Devtrac'));

    // User.
    $this->assertRaw('/sitereports?display=graphs&amp;qt-devtrac_sitereports_graphs_tabs=3#qt-devtrac_sitereports_graphs_tabs" id="quicktabs-tab-devtrac_sitereports_graphs_tabs-3"', t('Users quicktab is present on the page'), t('Devtrac'));

    // Enabling a Filter
    $this->assertLinkByHref('/sitereports?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Filtered by Basic Education link is present on the page.'), t('Devtrac'));
    //$this->drupalGet('?display=graphs&f[0]=taxonomy_vocabulary_8%3A19');
    $url_before = $this->getAbsoluteUrl('/?display=graphs');
    $urls = $this->xpath('//*[@id="facetapi-facet-search-apidevtrac-solr-site-visits-index-block-taxonomy-vocabulary-8"]/li[1]/a');
    if (isset($urls[0])) {
      $url_target = $this->getAbsoluteUrl($urls[0]['href']);
      $this->pass(t('Clicked link Basic education (@url_target) from @url_before', array('@url_target' => $url_target, '@url_before' => $url_before)), t('Devtrac'));
      $this->drupalGet($url_target);
    } else {
      $this->fail(t('Basic Education Link does not exist on @url_before', array('@url_before' => $url_before)), t('Devtrac'));
    }

    // Check current search counter.
    $this->assertRaw('<div class="current-search-item current-search-item-text current-search-item-results"><h3 class="">4 Site Reports</h3></div>', t('Search count changes after filter is enabled.'), t('Devtrac'));

    // Check for current search block.
    $this->assertRaw('<div class="current-search-item current-search-item-devtracgroup current-search-item-devtrac7-sitevisits-fieldgroup">', t('Current search block is visible when a filter is clicked.'), t('Devtrac'));
    $this->assertRaw('/sitereports?display=graphs" rel="nofollow" class="taxonomy-vocabulary-8 beautytips" title="Sector">Basic education [X] <span class="element-invisible"> Remove Basic education filter </span></a></li></ul></div></div>    </div>', t('Current search link to remove the filter  is present after a filter is clicked.'), t('Devtrac'));

    // Check main menu links.
    $this->assertLinkByHref('/sitereports?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 1, t('Filtered Site Reports link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/statistics?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Filtered Statistics link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/adminunits?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Filtered Admin Units link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/locations?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Filtered Locations link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/images?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Filtered Images link is present on the page.'), t('Devtrac'));

    // Check for view mode button links.
    $this->assertLinkByHref('/sitereports?display=default&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Default display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports?display=list&f[0]=taxonomy_vocabulary_8%3A19', 0, t('List display link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Graphs display link is present on the page.'), t('Devtrac'));

    // Check for Export links.
    $this->assertLinkByHref('/sitereports/analyse/csv?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Export to CSV link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports/analyse/kml?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Export to KML link is present on the page.'), t('Devtrac'));
    $this->assertLinkByHref('/sitereports/analyse/feed?display=graphs&f[0]=taxonomy_vocabulary_8%3A19', 0, t('Subscribe to RSS Feed link is present on the page.'), t('Devtrac'));

    $this->drupalget('');
    $this->clickLink('List', 0);
    // Check for Facet default state (expanded or collapsed).
    // Check
    // 2 is collapsible, default open
    //  3 is collapisble, default closed
    // "collapsiblock":{"blocks":{"block-facetapi-qroatxahw3knaekhprfd9avquqpaigex":3,"block-facetapi-lxcsjuspi4hstsg0c8hcqgwn6vgs7poa":2,"block-facetapi-amvw0eoro22vgnzwzxrzohrprftqkd3s":2,"block-facetapi-ptro3d6zztsp4x2g0recyln6cahmboqp":3,"block-facetapi-krl97bh45g1x3ci0vxrjqy1umtokw40l":3,"block-facetapi-1mowyanjknrdopbts0c089qkom59umzk":3,"block-pane-front-about-information":3}
    // Report block id block-facetapi-lxcsjuspi4hstsg0c8hcqgwn6vgs7poa.
    $this->assertRaw('"block-facetapi-lxcsjuspi4hstsg0c8hcqgwn6vgs7poa":2', t('Report block is expanded by default.'), t('Devtrac'));

    // Admin Unit block id block-facetapi-amvw0eoro22vgnzwzxrzohrprftqkd3s.
    $this->assertRaw('"block-facetapi-amvw0eoro22vgnzwzxrzohrprftqkd3s":2', t('Admin Unit block is expanded by default.'), t('Devtrac'));

    // Sector block id block-facetapi-ptro3d6zztsp4x2g0recyln6cahmboqp
    $this->assertRaw('"block-facetapi-ptro3d6zztsp4x2g0recyln6cahmboqp":3', t('Sector block is collapsed by default.'), t('Devtrac'));

    // Date Visited block id block-facetapi-krl97bh45g1x3ci0vxrjqy1umtokw40l
    $this->assertRaw('"block-facetapi-krl97bh45g1x3ci0vxrjqy1umtokw40l":3', t('Date Visited block is collapsed by default.'), t('Devtrac'));

    // Location block id block-facetapi-1mowyanjknrdopbts0c089qkom59umzk
    $this->assertRaw('"block-facetapi-1mowyanjknrdopbts0c089qkom59umzk":3', t('Location block is collapsed by default.'), t('Devtrac'));

    // Information pane block id block-pane-front-about-information
    $this->assertRaw('"block-pane-front-about-information":3', t('Information pane block is collapsed by default.'), t('Devtrac'));

    // Exports.
    // CSV.
    $this->clickLink('Export to CSV', 0);

    // Check for column names.
    $this->assertRaw('"UUID","Title","Site Report Type","District","Sector","Visited on","Summary","URL","Location UUID","Site Visit Lat","Site Visit Lon","Location Name","Location Type","Location URL"', t('All column names are present.'), t('Devtrac'));
 
    // Check for count of column names.
    $last_index = stripos($this->drupalGetContent(), "\"110df4d4-669e-423a-8d8c-e92a8383fe1f\"");
    $length = $last_index - 1;
    $Column_names_line = substr($this->drupalGetContent(), 0, $length);
    $Column_names = preg_split("/[,]+/", $Column_names_line);
    $this->verbose(var_export($Column_names, TRUE));
    If(count($Column_names) == 14) {
      $this->pass(t('CSV Column count is correct.'), t('Devtrac'));
    } else {
      $this->fail(t('CSV Column Count is wrong.'), t('Devtrac'));
    }

    $this->drupalGet('');
    // KML.
    $this->clickLink('Export to KML', 0);
    $this->assertRaw('<name>
    <![CDATA[Site Visit at Loroo Piped Water ]]>
  </name>', t('Name field is mapped correctly.'), t('Devtrac'));
    $this->assertRaw('<description>
    <![CDATA[<p>Monitoring Loroo Water System 11/2/14<br />
Issues:<br />
Borehole discharge is 2.2 m3/h, which would contribute to about 22 m3/d. The reservoir tank of 90 cubic metre capacity would require more than 4 days of pumping to fill. Population is 1,500 people. Demand per day would be 30,000 m3, atÂ¬â 20 l/p/d. This is inadequate.<br />
Together with LC III Chairman andÂ¬â Parish Chief , attempted to identify other water sourcesto be connected to the system but with no success. There are 2 water sources that are broken down but both holes require fishing.</p>
]]>
  </description>', t('Description field is mapped correctly.'), t('Devtrac'));
    $this->assertRaw('<Point>
    <coordinates>34.8768005371,2.1263198853,0</coordinates>
  </Point>', t('Coordinates field is mapped correctly.'), t('Devtrac'));

    $this->drupalGet('');
    // RSS Feeds.
    $this->clickLink('Subscribe to RSS Feed', 0);

    // Core items.
    // Title : title.
    $this->assertRaw('<item> <title>Site Visit at Loroo Piped Water </title>', t('Title is mapped correctly'), t('Devtrac'));
    // Link : site_info.
    $this->assertRaw('/uuid/node/110df4d4-669e-423a-8d8c-e92a8383fe1f</link>', t('Link is mapped correctly'), t('Devtrac'));
    // Description : field_ftritem_public_summary.
    $this->assertRaw('<description>Monitoring Loroo Water System 11/2/14
Issues:
Borehole discharge is 2.2 m3/h, which would contribute to about 22 m3/d. The reservoir tank of 90 cubic metre capacity would require more than 4 days of pumping to fill. Population is 1,500 people. Demand per day would be 30,000 m3, atÂ¬â 20 l/p/d. This is inadequate.
Together with LC III Chairman andÂ¬â Parish Chief , attempted to identify other water sourcesto be connected to the system but with no success. There are 2 water sources that are broken down but both holes require fishing.
</description>', t('Description mapped correctly'), t('Devtrac'));
    // Author : author.
    //$this->assertRaw('/uuid/node/110df4d4-669e-423a-8d8c-e92a8383fe1f</link>', t('Author is mapped correctly'));
    // Category : taxonomy_vocabulary_8.
    $this->assertRaw('<category>Amudat, Basic drinking water supply and basic sanitation</category>', t('Category is mapped correctly'), t('Devtrac'));
    // Guid : uuid.
    $this->assertRaw('<guid isPermaLink="false">110df4d4-669e-423a-8d8c-e92a8383fe1f</guid>', t('Guid is mapped correctly'), t('Devtrac'));
    // Published Date : created (Subject to change).
    //$this->assertRaw('<pubDate>Friday, January 9, 2015 - 08:56</pubDate>', t('Published Date is mapped correctly'), t('Devtrac'));

    // dc items.
    // Title : title.
    $this->assertRaw('<dc:title>Site Visit at Loroo Piped Water </dc:title>', t('dc Title is mapped correctly'), t('Devtrac'));
    // Creator : author.
    //$this->assertRaw('<dc:title>Site Visit at Loroo Piped Water </dc:title>', t('dc Author is mapped correctly'), t('Devtrac'));
    // Subject : taxonomy_vocabulary_8.
    $this->assertRaw('<dc:subject>Amudat, Basic drinking water supply and basic sanitation</dc:subject>', t('dc Subject is mapped correctly'), t('Devtrac'));
    // Description : field_ftritem_public_summary.
    $this->assertRaw('<dc:description>Monitoring Loroo Water System 11/2/14
Issues:
Borehole discharge is 2.2 m3/h, which would contribute to about 22 m3/d. The reservoir tank of 90 cubic metre capacity would require more than 4 days of pumping to fill. Population is 1,500 people. Demand per day would be 30,000 m3, atÂ¬â 20 l/p/d. This is inadequate.
Together with LC III Chairman andÂ¬â Parish Chief , attempted to identify other water sourcesto be connected to the system but with no success. There are 2 water sources that are broken down but both holes require fishing.
</dc:description>', t('dc Description mapped correctly'), t('Devtrac'));
    // Publisher : site_info_1.
    // Date : created (Subject to change).
    //$this->assertRaw('<dc:date>Friday, January 9, 2015 - 08:56</dc:date>', t('Date is mapped correctly'), t('Devtrac'));
    // Identifier : uuid.
    $this->assertRaw('<dc:identifier>110df4d4-669e-423a-8d8c-e92a8383fe1f</dc:identifier>', t('dc Guid is mapped correctly'), t('Devtrac'));
    // Coverage : taxonomy_vocabulary_6.
    $this->assertRaw('<dc:coverage>Amudat</dc:coverage>', t('dc Coverage is mapped correctly'), t('Devtrac'));

    // Georss items.
    // Point : field_ftritem_lat_long_lon.
    $this->assertRaw('<georss:point>2.126319885300 34.8768005371 </georss:point>', t('georss Point is mapped correctly'), t('Devtrac'));
    // FeatureName : title.
    $this->assertRaw('<georss:featureName>Site Visit at Loroo Piped Water </georss:featureName>', t('georss FeatureName is mapped correctly'), t('Devtrac'));
    // FeatureTypeTag : taxonomy_vocabulary_1.
    $this->assertRaw('<georss:featureTypeTag>Gfs or Tap</georss:featureTypeTag>', t('georss FeatureTypeTag is mapped correctly'), t('Devtrac'));

  }*/
}
