<?php 
module_load_include('test', 'simpletest_clone');
class SecondUserMenuTestCase extends SimpleTestCloneTestCase {
  protected $profile = 'devtrac';
  protected $admin_user;
  protected $authenticated_user;
  public static function getInfo() {
    return array(
      'name' => 'DevTrac second user menu',
      'description' => t('Testing the second user menu'),
      'group' => 'Devtrac',
    );
  }

	/**
	 * Log in a user with the internal browser.
	 *
	 * If a user is already logged in, then the current user is logged out before
	 * logging in the specified user.
	 *
	 * Please note that neither the global $user nor the passed in user object is
	 * populated with data of the logged in user. If you need full access to the
	 * user object after logging in, it must be updated manually. If you also need
	 * access to the plain-text password of the user (set by drupalCreateUser()),
	 * e.g. to login the same user again, then it must be re-assigned manually.
	 * For example:
	 * @code
	 *   // Create a user.
	 *   $account = $this->drupalCreateUser(array());
	 *   $this->drupalLogin($account);
	 *   // Load real user object.
	 *   $pass_raw = $account->pass_raw;
	 *   $account = user_load($account->uid);
	 *   $account->pass_raw = $pass_raw;
	 * @endcode
	 *
	 * @param $user
	 *   User object representing the user to login.
	 *
	 * @see drupalCreateUser()
	 */
	protected function drupalLogin(stdClass $user) {
		if ($this->loggedInUser) {
			$this->drupalLogout();
		}
	
		$edit = array(
				'name' => $user->name,
				'pass' => $user->pass_raw
		);
		$this->drupalPost('user', $edit, t('Log in'));
	
		// If a "log out" link appears on the page, it is almost certainly because
		// the login was successful.
		$pass = $this->assertLink(t('Sign out'), 0, t('User %name successfully logged in.', array('%name' =>  $edit['name'])), t('User login'));
	
		if ($pass) {
			$this->loggedInUser = $user;
		}
	}
	
	
  public function setUp() {
    parent::setUp();
    $this->public_files_directory = variable_get('file_public_path');
    $this->admin_user = $this->drupalCreateUser(array('administer users', 'administer permissions', 'access user profiles', 'administer site configuration', 'administer modules'));
    $this->authenticated_user = $this->drupalCreateUser();
    $this->drupalLogin($this->admin_user);
    $this->drupalPost('user/' . $this->admin_user->uid . '/edit', array(
      'roles[5]' => 5,
      'field_user_firstname[und][0][value]' => 'ozzx',
      'field_user_surname[und][0][value]' => 'xzzo',
      'field_user_aboutme[und][0][value]' => 'aboutjan',
      'field_user_superior[und][0][target_id]' => 'admin (1)'),
      t('Save'));
  }
  public function testUserSecondMenu() {
    $this->drupalGet('user/' . $this->admin_user->uid);
    $this->assertNoLink('Welcome, [current-user:field_user_firstname]', 0, 'Welcome message link is not found');
    $this->assertNoLink('Welcome, ozzx', 0, t('the second user menu is found with the welcoming note'));
    $this->assertNoLink('Overview', 0, t('the second user menu is found with the welcoming note'));
    
  } 
  public function testGeosearchBlock() {	
    $this->drupalGet('node/add/fieldtrip', array('query' => array('field_fieldtrip_user' => $this->admin_user->uid, 'field_fieldtrip_places' => '')));
    $this->assertNoText(t('TA Number'), t('TA number field is found'), 'DevTrac');
    $percentage = array('field_fieldtrip_fc_purpose_percent[und][0][value]' =>78);
    // Populating the fieldtrip create form.
    $this->assertNoField('taxonomy_vocabulary_6[und][]', 'district field is placed back');
    $fullReportSubmitozyq['title'] = 'YES WE CAN';
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_descr][und][0][value]'] = $this->randomName(32);
    $fullReportSubmitozyq['field_fieldtrip_internal_id[und][0][value]'] = 76;
    $this->assertNoField('field_fieldtrip_proms_ta_id[und][0][value]', 'Proms Ta field was renamed');
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_fc_purpose_purps][und]'] = 2;
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_percent][und][0][value]'] = 100;
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value][date]'] = '26/09/2012';
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value2][date]'] = '26/10/2012';
    $this->drupalPost(NULL, $fullReportSubmitozyq, t('Save'), array('query' => array(
      'field_fieldtrip_user' => $this->admin_user->uid,
      'field_fieldtrip_places' => '')));
    $this->assertText(t('has been created.'), ('field trip is created successfully'), 'DevTrac');
    $nodeAddreportfullSubmitozyq = $this->drupalGetNodeByTitle($fullReportSubmitozyq["title"]);	
    $this->assertNotNull($nodeAddreportfullSubmitozyq, t('node loaded'));
    $this->clickLink('Add a Site Report to the Field Trip.', 0, t('link to add site reports to fieldtrip'));
    $this->assertField('district', 'district filed is renamed');
    $formSubmitreportsozyq['reporttype'] = 1;
    $this->assertNoField('placetype', 'Place type field is removed');
    $this->assertNoField('placetype', 'place type field is no longer found');
    $this->drupalPost('node/' . $nodeAddreportfullSubmitozyq->nid . '/addplaceform/ajax/nojs/go', $formSubmitreportsozyq, t('Submit'), array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmitozyq->nid)));
    $locationAddFullozyq['title'] = $this->randomName(32);
    $locationAddFullozyq['taxonomy_vocabulary_1[und]'] = 245;
    $this->assertNoField('taxonomy_vocabulary_6[und][]', 'Taxonomy vocabulary term 6 is removed');
    $this->drupalGet('node/add/place/');
    $this->assertNoText('Uganda Basemap', t('Uganda Basemap option is found'), 'Devtrac');
    $this->assertNoText('Layer Switcher', t('Layer Switcher section is found'), 'Devtrac');
    $this->assertNoText('Base layers', t('Base layers label is found on add places'), 'Devtrac');
    $this->assertNoText('OSM Mapnik', t('OSM Mapnik option is found'), 'Devtrac');
    $this->assertNoText('U-Map It Schools (New)', t('U-Map It Schools (New) option is found'), 'Devtrac');
  }
  public function testGeoSearch() {
    $this->drupalGet('node/add/fieldtrip', array('query' => array('field_fieldtrip_user' => $this->admin_user->uid, 'field_fieldtrip_places' => '')));
    $this->assertNoText(t('TA Number'), t('TA number field is found'), 'DevTrac');
    $percentage = array('field_fieldtrip_fc_purpose_percent[und][0][value]' =>78);
   // Populating the fieldtrip create form.
    $this->assertNoField('placetype', 'place type field is no longer found');
    $fullReportSubmitozyq['title'] = 'YES WE CAN';
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_descr][und][0][value]'] = $this->randomName(32);
    $this->assertNoField('field_fieldtrip_proms_ta_id[und][0][value]', 'Proms Ta number field was renamed');
    $fullReportSubmitozyq['field_fieldtrip_internal_id[und][0][value]'] = 76;
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_fc_purpose_purps][und]'] = 2;
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_percent][und][0][value]'] = 100;
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value][date]'] = '26/09/2012';
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value2][date]'] = '26/10/2012';
    $this->drupalPost(NULL, $fullReportSubmitozyq, t('Save'), array('query' => array('field_fieldtrip_user' => $this->admin_user->uid, 'field_fieldtrip_places' => '')));
    $this->assertText(t('has been created.'), ('field trip is created successfully'), 'DevTrac');
    $nodeAddreportfullSubmitozyq = $this->drupalGetNodeByTitle($fullReportSubmitozyq["title"]);
    $this->assertNotNull($nodeAddreportfullSubmitozyq, t('node loaded'));
    $this->clickLink('Add a Site Report to the Field Trip.', 0, t('link to add site reports to fieldtrip'));
    $formSubmitreportsozyq['reporttype'] = 1;
    $this->assertField('reporttype', 'Report type filed found');
    $this->assertField('district', 'district field is placed back');
    // $formSubmitreportsozyq['placetype'] = 1;
    $this->assertNoField('placetype', 'place type is removed from the add site report form');
    $this->drupalPost('node/'.$nodeAddreportfullSubmitozyq->nid.'/addplaceform/ajax/nojs/go', $formSubmitreportsozyq, t('Submit'), array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmitozyq->nid)));
    $locationAddFullozyq['title'] = $this->randomName(32);
    $locationAddFullozyq['taxonomy_vocabulary_1[und]'] = 245;
    $this->assertField('taxonomy_vocabulary_6[und]', 'Taxonomy vocabulary term 6 is not removed');
    $this->drupalGet('node/add/place/', array('query' => array('edit[taxonomy_vocabulary_6][und]' => 81)));
    $this->assertNoText('Here will the results be', t('Section under which the geosearch will be placed is found'), 'Devtrac');
    $this->assertNoText('Base layers', t('Base layers label is found on add places'), 'Devtrac');
    $this->assertNoText('Search location ', t('Search location block is not found on the add locatin page'), 'Devtrac');
    $this->assertNoField('openlayers_geosearch_query_block', t('Goesearch field is not found on the add places page'), 'Devtrac');
  }
  public function testActualGeoSearch() {
    $this->drupalGet('node/add/fieldtrip', array('query' => array('field_fieldtrip_user' => $this->admin_user->uid, 'field_fieldtrip_places' => '')));
    $this->assertNoText(t('TA Number'), t('TA number field is not found'), 'DevTrac');
    $percentage = array('field_fieldtrip_fc_purpose_percent[und][0][value]' =>78);
    // populating the fieldtrip create form
    //$fullReportSubmitozyq['taxonomy_vocabulary_6[und][]'] = array(80, 81, 82, 83);
    $this->assertNoField('placetype', 'place type field is no longer found');
    $fullReportSubmitozyq['title'] = 'YES WE CAN';
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_descr][und][0][value]'] = $this->randomName(32);
    $this->assertNoField('field_fieldtrip_proms_ta_id[und][0][value]', 'Proms Ta id field was renamed');
    $fullReportSubmitozyq['field_fieldtrip_internal_id[und][0][value]'] = 76 . 'war';
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_fc_purpose_purps][und]'] = 2;
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_percent][und][0][value]'] = 100;
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value][date]'] = '26/09/2012';
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value2][date]'] = '26/10/2012';
    $this->drupalPost(NULL, $fullReportSubmitozyq, t('Save'), array('query' => array('field_fieldtrip_user' => $this->admin_user->uid, 'field_fieldtrip_places' => '')));
    $this->assertText(t('has been created.'), ('field trip is created successfully'), 'DevTrac');
    $nodeAddreportfullSubmitozyq = $this->drupalGetNodeByTitle($fullReportSubmitozyq["title"]);
    $this->assertNotNull($nodeAddreportfullSubmitozyq, t('node loaded'));
    $this->clickLink('Add a Site Report to the Field Trip.', 0, t('link to add site reports to fieldtrip'));
    $formSubmitreportsozyq['reporttype'] = 1;
    $this->assertField('district', 'District field was renamed');
    $this->assertnoField('placetype', 'place type field is renamed');
    $this->assertNoField('placetype', 'place type field is no longer found on the add site report form');
    $this->drupalPost('node/'.$nodeAddreportfullSubmitozyq->nid.'/addplaceform/ajax/nojs/go', $formSubmitreportsozyq, t('Submit'), array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmitozyq->nid)));
    $locationAddFullozyq['title'] = $this->randomName(32);
    $locationAddFullozyq['taxonomy_vocabulary_1[und]'] = 27;
    $this->assertNoField('taxonomy_vocabulary_6[und][]', 'Taxonomy vocabulary 6 filed was removed from the form');
    $this->drupalGet('node/add/place/'.array('query' => array('edit[taxonomy_vocabulary_6][und]' => 81)));
    $this->assertNoText('Here will the results be', t('Section under which the geosearch will be placed is found'), 'Devtrac');
    // Fillig in the places in the geosearch.
    $geo['openlayers_geosearch_query_block'] = '';
    $this->assertNoField('openlayers_geosearch_query_block', 'Geo search field is not found');
    $this->assertNoField('Search', 'Search field is not found');
    $this->drupalPost(NULL, NULL, t('Save'));
  }
  public function testGeoRandomTextSearch() {
    $this->drupalGet('node/add/fieldtrip', array('query' => array('field_fieldtrip_user' => $this->admin_user->uid, 'field_fieldtrip_places' => '')));
    $this->assertNoText(t('TA Number'), t('TA number field is found'), 'DevTrac');
    $percentage = array('field_fieldtrip_fc_purpose_percent[und][0][value]' =>78);
    // Populating the fieldtrip create form.
    // $fullReportSubmitozyq['taxonomy_vocabulary_6[und][]'] = array(80, 81, 82, 83);
    $this->assertNoField('placetype', 'place type field is no longer found');
    $fullReportSubmitozyq['title'] = 'YES WE CAN';
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_descr][und][0][value]'] = $this->randomName(32);
    $fullReportSubmitozyq['field_fieldtrip_internal_id[und][0][value]'] = 76;
    $this->assertNoField('field_fieldtrip_proms_ta_id[und][0][value]', 'Proms ta was renamed');
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_fc_purpose_purps][und]'] = 3;
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_percent][und][0][value]'] = 100;
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value][date]'] = '26/09/2012';
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value2][date]'] = '26/10/2012';
    $this->drupalPost(NULL, $fullReportSubmitozyq, t('Save'), array('query' => array('field_fieldtrip_user' => $this->admin_user->uid, 'field_fieldtrip_places' => '')));
    $this->assertText(t('has been created.'), ('field trip is created successfully'), 'DevTrac');
    $nodeAddreportfullSubmitozyq = $this->drupalGetNodeByTitle($fullReportSubmitozyq["title"]);
    $this->assertNotNull($nodeAddreportfullSubmitozyq, t('node loaded'));
    $this->clickLink('Add a Site Report to the Field Trip.', 0, t('link to add site reports to fieldtrip'));
    $formSubmitreportsozyq['reporttype'] = 1;
    $this->assertField('district', 'district');
    $this->assertNoField('placetype', 'placetype');
    //$formSubmitreportsozyq['placetype'] = 1;
    $this->assertNoField('placetype', 'place type field is removed from the add site report form');
    $this->drupalPost('node/'.$nodeAddreportfullSubmitozyq->nid.'/addplaceform/ajax/nojs/go', $formSubmitreportsozyq, t('Submit'), array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmitozyq->nid)));
    $locationAddFullozyq['title'] = $this->randomName(32);
    $locationAddFullozyq['taxonomy_vocabulary_1[und]'] = 248;
    $this->assertNoField('taxonomy_vocabulary_6[und][]', 'Taxonomy vocabulary 6 filed was removed from the form');
    $locationAddFullozyq['field_place_lat_long[und][0][geom]'] = 'POINT (33.256301879883 2.269829988480)';
    $this->drupalGet('node/add/place/'.array('query' => array('edit[taxonomy_vocabulary_6][und]' => 81)));
    $this->assertNoText('Here will the results be', t('Section under which the geosearch will be placed is found'), 'Devtrac');
    //fillig in the places in the geosearch
    $geo1['openlayers_geosearch_query_block'] = $this->randomName(4);
    $this->assertNoText('Open layers', 'Open layers block is not showing');
    $this->assertNoField('openlayers_geosearch_query_block', 'Field was removed');
    $this->assertNoField('Search', 'search button was removed');
    $this->drupalPost(NULL, $locationAddFullozyq, t('Save'));
  }
  public function testValidGeoSearch() {
    $this->drupalGet('node/add/fieldtrip', array('query' => array('field_fieldtrip_user' => $this->admin_user->uid, 'field_fieldtrip_places' => '')));
    $this->assertNoText(t('TA Number'), t('TA number field is found'), 'DevTrac');
    $percentage = array('field_fieldtrip_fc_purpose_percent[und][0][value]' =>78);
    // Populating the fieldtrip create form.
    $this->assertNoField('placetype', 'place type field is no longer found');
    $fullReportSubmitozyq['title'] = 'YES WE CAN';
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_descr][und][0][value]'] = $this->randomName(32);
    $this->assertNoField('field_fieldtrip_proms_ta_id[und][0][value]', 'Proms ta was renamed');
    $fullReportSubmitozyq['field_fieldtrip_internal_id[und][0][value]'] = $this->randomString(4);
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_fc_purpose_purps][und]'] = 2;
    $fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_percent][und][0][value]'] = 100;
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value][date]'] = '26/09/2012';
    $fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value2][date]'] = '26/10/2012';
    $this->drupalPost(NULL, $fullReportSubmitozyq, t('Save'), array('query' => array('field_fieldtrip_user' => $this->admin_user->uid, 'field_fieldtrip_places' => '')));
    $this->assertText(t('has been created.'), ('field trip is created successfully'), 'DevTrac');
    $nodeAddreportfullSubmitozyq = $this->drupalGetNodeByTitle($fullReportSubmitozyq["title"]);
    $this->assertNotNull($nodeAddreportfullSubmitozyq, t('node loaded'));
    $this->clickLink('Add a Site Report to the Field Trip.', 0, t('link to add site reports to fieldtrip'));
    $formSubmitreportsozyq['reporttype'] = 1;
    $this->assertField('district', 'district field on add place form');
    $this->assertNoField('placetype', 'place type is removed from the add site report visit form');
    $this->drupalPost('node/' . $nodeAddreportfullSubmitozyq->nid . '/addplaceform/ajax/nojs/go', $formSubmitreportsozyq, t('Submit'), array(
      'query' => array(
      'destination' => 'node/' . $nodeAddreportfullSubmitozyq->nid)));
    $locationAddFullozyq['title'] = $this->randomName(32);
    $locationAddFullozyq['taxonomy_vocabulary_1[und]'] = 27;
    $this->assertField('taxonomy_vocabulary_6[und]', 'Taxonomy vocabulary 6 filed was removed not from the form');
    $this->drupalGet('node/add/place/', array('query' => array('edit[taxonomy_vocabulary_6][und]' => 81)));
    $this->assertNoText('Here will the results be', t('Section under which the geosearch will be placed is found'), 'Devtrac');
    // Fillig in the places in the geosearch.
    $this->assertNoText('Open layers', 'Open layers block is not showing');
    $this->assertNoField('openlayers_geosearch_query_block', 'Field was removed');
    $this->assertNoField('Search', 'search button was removed');
    $this->drupalPost(NULL, NULL, t('Save'));
    $this->assertNoResponse(404, 'Page not found');
  }
  
}

class UserManagerFilterTestCase extends DrupalWebTestCase {
  protected $profile = 'devtrac';
  protected $admin_user;
  protected $manager_user;
  public static function getInfo() {
    return array(
      'name' => 'DevTrac User-manager fieldtrip filter',
      'description' => t('Testing the User-manager fieldtrip filte'),
      'group' => 'Devtrac',
    );
  }

	/**
	 * Log in a user with the internal browser.
	 *
	 * If a user is already logged in, then the current user is logged out before
	 * logging in the specified user.
	 *
	 * Please note that neither the global $user nor the passed in user object is
	 * populated with data of the logged in user. If you need full access to the
	 * user object after logging in, it must be updated manually. If you also need
	 * access to the plain-text password of the user (set by drupalCreateUser()),
	 * e.g. to login the same user again, then it must be re-assigned manually.
	 * For example:
	 * @code
	 *   // Create a user.
	 *   $account = $this->drupalCreateUser(array());
	 *   $this->drupalLogin($account);
	 *   // Load real user object.
	 *   $pass_raw = $account->pass_raw;
	 *   $account = user_load($account->uid);
	 *   $account->pass_raw = $pass_raw;
	 * @endcode
	 *
	 * @param $user
	 *   User object representing the user to login.
	 *
	 * @see drupalCreateUser()
	 */
	protected function drupalLogin(stdClass $user) {
		if ($this->loggedInUser) {
			$this->drupalLogout();
		}
	
		$edit = array(
				'name' => $user->name,
				'pass' => $user->pass_raw
		);
		$this->drupalPost('user', $edit, t('Log in'));
	
		// If a "log out" link appears on the page, it is almost certainly because
		// the login was successful.
		$pass = $this->assertLink(t('Sign out'), 0, t('User %name successfully logged in.', array('%name' =>  $edit['name'])), t('User login'));
	
		if ($pass) {
			$this->loggedInUser = $user;
		}
	}

  public function setUp() {
    parent::setUp();
    $this->admin_user = $this->drupalCreateUser(array('administer users', 'administer permissions', 'access user profiles', 'administer site configuration', 'administer modules'));
    $manager_user = $this->drupalCreateUser();
    $this->drupalLogin($this->admin_user);
    $this->drupalPost('user/' . $this->admin_user->uid . '/edit', array(
    "roles[5]" => 5, 'field_user_firstname[und][0][value]' => 'ozzx', 'field_user_surname[und][0][value]' => 'xzzo', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'field_user_superior[und][0][target_id]' => 'admin (1)'), t('Save'));
  }
  /**
   * Any user is not supposed to access the action item edit button
   * on his/her user page
   * 
   */
	
  public function testNoActionItemEditButton() {
    $this->drupalGet('user/' . $this->admin_user->uid);
    $this->assertNoLink('Edit Action Item', 0, t('User can not access the Edit Action Item button'));	
   }
   /**
    * Even on the Action item it's self there should be no Edit Action Item button.
    * 
    * The user is not responsible for the Action Item.
    */
  public function testNoActionEditAitem() {
    $this->drupalLogout();
    $this->drupalGet('node/1537');
    $this->assertNoLink('Edit Action Item', 0, 'User can not access the Edit Action Item button');
  }
      
}
